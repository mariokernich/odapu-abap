{"version":3,"file":"OData.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Constants","__Constants","Util","__Util","OData2Client","__OData2Client","OData4Client","__OData4Client","OData","extend","constructor","prot+
otype","apply","this","arguments","selectedService","service","entities","actions","localData","resourceType","selectedEntityName","selectedFunctionName","response","selectedMethod","selectedServiceFunctions","selectedEntityProperties","properties","keyP+
roperties","entityCount","functionCount","actionCount","top","skip","dark","statusCode","view","folderTreeIcon","sap","ui","require","toUrl","dataViewMode","selectedServiceActions","fragmentId","values","onInit","_onInit","BaseController.prototype.onInit+
.call","handleInit","registerModels","_registerModels","getView","setModel","JSONModel","name","returnType","entitySet","method","parameters","async","_handleInit","getGlobalModel","dataLoaded","setBusy","model","getOwnerComponent","getModel","metadataLo+
aded","setSizeLimit","SERVICE_QUERY_LIMIT","Device","support","websocket","MessageToast","show","onSelectService","_onSelectService","handleServiceSelection","onSelectEntity","_onSelectEntity","handleEntityChanged","onSelectFunction","_onSelectFunction",+
"handleFunctionChanged","onAddFilterButtonPress","_onAddFilterButtonPress","handleAddFilter","onAddSortButtonPress","_onAddSortButtonPress","handleAddSort","onButtonSortDeletePress","_onButtonSortDeletePress","event","binding","getSource","getBindingCont+
ext","obj","getObject","handleButtonSortDeletePress","onSendRequest","_onSendRequest","clearResult","execEntityRead","execEntityGetSingle","execEntityCreate","execEntityDelete","execFunctionRequest","Error","onShowMetadata","_onShowMetadata","xml","odata+
Client","getMetadataText","component","dialogManager","showXmlCodeEditor","onAddHeader","_onAddHeader","handleAddHeader","onButtonSaveConfigurationPress","_onButtonSaveConfigurationPress","handleSaveConfiguration","onButtonLoadConfigurationPress","_onBut+
tonLoadConfigurationPress","handleLoadConfiguration","_handleServiceSelection","pickService","loadService","_loadService","setTitle","ServiceName","destroy","undefined","ODataType","ServicePath","initAsync","handleServiceSelected","_handleServiceSelected+
","resetFilters","resetSorting","resetEntityInputs","getEntities","getFunctions","getActions","length","_pickService","_handleEntityChanged","find","entity","keys","filter","property","some","keyProperty","_handleFunctionChanged","resetFunctionInputs","s+
electedFunction","func","setProperty","_execEntityCreate","getEntityPropertyValues","allProperties","createEntity","entityName","headers","getHeaders","error","MessageBox","toString","_execEntityDelete","Object","value","join","deleteEntity","_execEntity+
GetSingle","emptyKeyProperties","key","data","getEntity","JSON","stringify","setTableResponse","_execEntityRead","filters","getProperty","sorting","readEntity","map","Filter","operator","sort","Sorter","direction","history","push","timestamp","Date","toI+
SOString","getResultTable","_getResultTable","getById","_clearResult","table","removeAllColumns","removeAllItems","_setTableResponse","propertiesMerged","isKey","keyProp","items","Array","isArray","dataObj","results","headerText","maxLength","forEach","i+
tem","displayValue","String","Math","max","columnWidth","headerContent","VBox","HBox","Icon","src","addStyleClass","Text","text","Boolean","alignItems","addColumn","Column","header","width","cells","addItem","ColumnListItem","_execFunctionRequest","fn","+
getFunctionParameterValues","executeFunction","functionName","_resetFilters","_resetSorting","_handleAddFilter","e","addFilter","conflict","f","_handleAddHeader","showAddHeaderDialog","existingHeader","h","onEditHeader","_onEditHeader","submit","valueInp+
ut","getValue","index","findIndex","dialog","close","Input","Dialog","title","contentWidth","content","Label","setBeginButton","Button","press","type","icon","setEndButton","open","selectText","onDeleteHeader","_onDeleteHeader","splice","_getHeaders","he+
aderValues","onCopyTodpupboard","_onCopyTodpupboard","handleCopy","_handleCopy","copy2Clipboard","onInputPropertyChange","_onInputPropertyChange","source","propertyName","getName","_getById","id","globalId","control","Core","byId","_getFunctionParameterV+
alues","parametersVbox","parameterInputs","getAllInputValues","_getEntityPropertyValues","propertiesVbox","keyPropertiesVbox","propertyInputs","keyPropertyInputs","_resetEntityInputs","resetInputs","_resetFunctionInputs","onButtonFilterDeletePress","_onB+
uttonFilterDeletePress","handleButtonFilterDeletePress","onButtonFilterEditPress","_onButtonFilterEditPress","handleButtonFilterEditPress","_handleButtonFilterDeletePress","filteredList","_handleButtonFilterEditPress","updated","editFilter","onButtonView+
ResponsePress","_onButtonViewResponsePress","historyItem","_handleAddSort","addSort","s","_handleButtonSortDeletePress","_handleSaveConfiguration","projectName","showSaveProjectDialog","sorters","project","ProjectName","Odatatype","ServiceVersion","Versi+
on","EntityMethod","EntityName","FunctionName","ActionName","RequestType","Top","Skip","Headers","Filters","Sorters","requests","createProject","_handleLoadConfiguration","selectedProject","showProjectListDialog","parse","message","_setTitle"],"sources":+
["OData.controller.ts"],"sourcesContent":["import ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport BaseController from \"./BaseController\";\nimport Dialog from \"sap/m/Dialog\";\nimport Button, { Button$PressEvent } from \"sap/m/Button\";\n+
import JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Label from \"sap/m/Label\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport {\n\tFilterRecord,\n\tMainViewModel,\n\tMetadataFunction,\n\tProject,\n\tRequestHeader,\n\tRequestHistory+
,\n\tSelectedFunctionModel,\n\tSelectedServiceModel,\n\tServiceEntity,\n} from \"../Types\";\nimport Constants from \"../Constants\";\nimport Input from \"sap/m/Input\";\nimport VBox from \"sap/m/VBox\";\nimport MessageBox from \"sap/m/MessageBox\";\nimp+
ort Util from \"../util/Util\";\nimport Device from \"sap/ui/Device\";\nimport Control from \"sap/ui/core/Control\";\nimport OData2Client from \"../util/OData2Client\";\nimport IODataClient from \"../util/IODataClient\";\nimport OData4Client from \"../ut+
il/OData4Client\";\nimport Filter from \"sap/ui/model/Filter\";\nimport Core from \"sap/ui/core/Core\";\nimport Table from \"sap/m/Table\";\nimport Column from \"sap/m/Column\";\nimport Text from \"sap/m/Text\";\nimport ColumnListItem from \"sap/m/Column+
ListItem\";\nimport HBox from \"sap/m/HBox\";\nimport Icon from \"sap/ui/core/Icon\";\nimport { Input$ChangeEvent } from \"sap/ui/webc/main/Input\";\nimport Sorter from \"sap/ui/model/Sorter\";\n\n/**\n * @namespace de.kernich.odpu.controller\n */\nexpor+
t default class OData extends BaseController {\n\tprivate selectedService: SelectedServiceModel = {\n\t\tservice: null,\n\t\tentities: null,\n\t\tactions: null,\n\t};\n\n\tprivate localData: MainViewModel = {\n\t\tresourceType: \"entity\",\n\t\tselectedE+
ntityName: \"\",\n\t\tselectedFunctionName: \"\",\n\t\tresponse: \"\",\n\t\tselectedMethod: \"GET\",\n\t\tselectedServiceFunctions: [],\n\t\tselectedEntityProperties: {\n\t\t\tproperties: [],\n\t\t\tkeyProperties: [],\n\t\t},\n\t\tentityCount: 0,\n\t\tfu+
nctionCount: 0,\n\t\tactionCount: 0,\n\t\ttop: 10,\n\t\tskip: 0,\n\t\tdark: false,\n\t\tstatusCode: 0,\n\t\tview: \"odata\",\n\t\tfolderTreeIcon: sap.ui.require.toUrl(\n\t\t\t\"de/kernich/odpu/img/folder-tree-light.svg\"\n\t\t),\n\t\tdataViewMode: \"json+
\",\n\t\tselectedServiceActions: [],\n\t};\n\tprivate odataClient?: IODataClient;\n\tpublic fragmentId: string = \"\";\n\n\t/**\n\t * Initialize the controller\n\t */\n\tonInit() {\n\t\tsuper.onInit();\n\t\tvoid this.handleInit();\n\t\tthis.registerModel+
s();\n\t}\n\n\t/**\n\t * Register models for the view\n\t */\n\tprivate registerModels() {\n\t\tthis.getView().setModel(new JSONModel(this.localData, true), \"local\");\n\t\tthis.getView().setModel(\n\t\t\tnew JSONModel(this.selectedService, true),\n\t\t+
\t\"selectedService\"\n\t\t);\n\t\tthis.getView().setModel(\n\t\t\tnew JSONModel(\n\t\t\t\t{\n\t\t\t\t\tname: \"\",\n\t\t\t\t\treturnType: \"\",\n\t\t\t\t\tentitySet: \"\",\n\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\tparameters: [],\n\t\t\t\t} as SelectedFunc+
tionModel,\n\t\t\t\ttrue\n\t\t\t),\n\t\t\t\"selectedFunction\"\n\t\t);\n\t\tthis.getView().setModel(new JSONModel([], true), \"entityFilters\");\n\t\tthis.getView().setModel(new JSONModel([], true), \"entitySorting\");\n\t\tthis.getView().setModel(new JS+
ONModel([], true), \"requestHistory\");\n\t\tthis.getView().setModel(new JSONModel([], true), \"requestHeaders\");\n\t}\n\n\t/**\n\t * Handle initialization of the controller\n\t */\n\tprivate async handleInit() {\n\t\tawait this.getGlobalModel().dataLoa+
ded();\n\t\tthis.setBusy(true);\n\n\t\tconst model = this.getOwnerComponent().getModel() as ODataModel;\n\t\tawait model.metadataLoaded(true);\n\t\tmodel.setSizeLimit(Constants.SERVICE_QUERY_LIMIT);\n\n\t\tthis.setBusy(false);\n\n\t\tif (!Device.support.+
websocket) {\n\t\t\tMessageToast.show(\"Note: WebSocket not supported\");\n\t\t}\n\t}\n\n\t/**\n\t * Event handler: Select service\n\t */\n\tonSelectService() {\n\t\tvoid this.handleServiceSelection();\n\t}\n\n\t/**\n\t * Event handler: Entity selection +
changed\n\t */\n\tonSelectEntity() {\n\t\tthis.handleEntityChanged();\n\t}\n\n\t/**\n\t * Event handler: Function selection changed\n\t */\n\tonSelectFunction() {\n\t\tthis.handleFunctionChanged();\n\t}\n\n\t/**\n\t * Event handler: Add filter button pre+
ssed\n\t */\n\tonAddFilterButtonPress() {\n\t\tvoid this.handleAddFilter();\n\t}\n\n\t/**\n\t * Event handler: Add sorter button pressed\n\t */\n\tonAddSortButtonPress() {\n\t\tvoid this.handleAddSort();\n\t}\n\n\t/**\n\t * Event handler: Delete sorter b+
utton pressed\n\t */\n\tonButtonSortDeletePress(event: Button$PressEvent) {\n\t\tconst binding = event.getSource().getBindingContext(\"entitySorting\");\n\t\tconst obj = binding.getObject() as {\n\t\t\tproperty: string;\n\t\t\tdirection: \"asc\" | \"desc+
\";\n\t\t};\n\t\tvoid this.handleButtonSortDeletePress(obj);\n\t}\n\n\t/**\n\t * Event handler: Execute request\n\t */\n\tonSendRequest() {\n\t\tthis.clearResult();\n\t\tif (this.localData.resourceType === \"entity\") {\n\t\t\tswitch (this.localData.sele+
ctedMethod) {\n\t\t\t\tcase \"GET\":\n\t\t\t\t\tvoid this.execEntityRead();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"GETBY\":\n\t\t\t\t\tvoid this.execEntityGetSingle();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"POST\":\n\t\t\t\t\tvoid this.execEntityCreate();\n\t\t\t\+
t\tbreak;\n\t\t\t\tcase \"DELETE\":\n\t\t\t\t\tvoid this.execEntityDelete();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (this.localData.resourceType === \"function\") {\n\t\t\tvoid this.execFunctionRequest();\n\t\t} else {\n\t\t\tthrow new Error(`Unknown +
resource type: ${this.localData.resourceType}`);\n\t\t}\n\t}\n\n\t/**\n\t * Event handler: Show metadata button pressed\n\t */\n\tpublic onShowMetadata() {\n\t\tconst xml = this.odataClient?.getMetadataText();\n\t\tvoid this.component.dialogManager.showX+
mlCodeEditor(xml);\n\t}\n\n\t/**\n\t * Event handler: Add header button pressed\n\t */\n\tonAddHeader() {\n\t\tvoid this.handleAddHeader();\n\t}\n\n\t/**\n\t * Event handler: Save configuration button pressed\n\t */\n\tonButtonSaveConfigurationPress() {\+
n\t\tvoid this.handleSaveConfiguration();\n\t}\n\n\t/**\n\t * Event handler: Load configuration button pressed\n\t */\n\tonButtonLoadConfigurationPress() {\n\t\tvoid this.handleLoadConfiguration();\n\t}\n\n\t/**\n\t * Selected service and load data from +
selected service\n\t * This will load entities, functions and actions\n\t */\n\tprivate async handleServiceSelection() {\n\t\tconst service = await this.pickService();\n\t\tawait this.loadService(service);\n\t}\n\n\t/**\n\t * Load service data\n\t * @par+
am service - service entity\n\t */\n\tprivate async loadService(service: ServiceEntity) {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tthis.selectedService.service = service;\n\t\t\tthis.setTitle(service.ServiceName);\n\n\t\t\tthis.localData.selectedEntity+
Name = \"\";\n\t\t\tthis.localData.selectedFunctionName = \"\";\n\t\t\tthis.localData.selectedServiceFunctions = [];\n\t\t\tthis.localData.resourceType = \"entity\";\n\t\t\tthis.localData.selectedMethod = \"GET\";\n\n\t\t\tthis.odataClient?.destroy();\n\+
t\t\tthis.odataClient = undefined;\n\n\t\t\t// based on ODATA version, create the correct client\n\t\t\tswitch (service.ODataType) {\n\t\t\t\tcase \"2\":\n\t\t\t\t\tthis.odataClient = new OData2Client(service.ServicePath);\n\t\t\t\t\tbreak;\n\t\t\t\tcase+
 \"4\":\n\t\t\t\t\tthis.odataClient = new OData4Client(service.ServicePath);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tMessageToast.show(\"Service Type not supported\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tawait this.odataClient.initAsync();\n\t\t\t+
this.handleServiceSelected();\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Handle service selected\n\t */\n\tprivate handleServiceSelected() {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tthis.resetFilters();\n\t\t\tthis.resetSor+
ting();\n\t\t\tthis.resetEntityInputs();\n\n\t\t\tthis.selectedService.entities = this.odataClient?.getEntities() || [];\n\t\t\tthis.localData.selectedServiceFunctions =\n\t\t\t\tthis.odataClient?.getFunctions() || [];\n\n\t\t\tthis.localData.selectedSer+
viceActions =\n\t\t\t\tthis.odataClient?.getActions() || [];\n\n\t\t\tthis.localData.entityCount = this.selectedService.entities.length;\n\t\t\tthis.localData.functionCount =\n\t\t\t\tthis.localData.selectedServiceFunctions.length;\n\t\t\tthis.localData.+
actionCount = this.localData.selectedServiceActions.length;\n\t\t\tif (this.selectedService.entities.length > 0) {\n\t\t\t\tthis.localData.selectedEntityName =\n\t\t\t\t\tthis.selectedService.entities[0].name;\n\t\t\t\tthis.handleEntityChanged();\n\t\t\t+
}\n\n\t\t\tif (this.localData.selectedServiceFunctions.length > 0) {\n\t\t\t\tthis.localData.selectedFunctionName =\n\t\t\t\t\tthis.localData.selectedServiceFunctions[0].name;\n\t\t\t\tthis.handleFunctionChanged();\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.s+
etBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Show dialog to pick an ODATA service\n\t */\n\tprivate async pickService() {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\treturn await this.component.dialogManager.pickService();\n\t\t} finally {\n\t\t\tthis.setBus+
y(false);\n\t\t}\n\t}\n\n\t/**\n\t * Load data of selected entity to selectedService model\n\t */\n\tprivate handleEntityChanged() {\n\t\tthis.resetFilters();\n\t\tthis.resetSorting();\n\t\tthis.resetEntityInputs();\n\t\tconst properties = this.selectedS+
ervice.entities.find(\n\t\t\t(entity) => entity.name === this.localData.selectedEntityName\n\t\t)?.properties;\n\t\tthis.localData.selectedEntityProperties.properties = properties || [];\n\t\tthis.localData.selectedEntityProperties.keyProperties =\n\t\t\+
tthis.selectedService.entities.find(\n\t\t\t\t(entity) => entity.name === this.localData.selectedEntityName\n\t\t\t)?.keys || [];\n\n\t\tthis.localData.selectedEntityProperties.properties =\n\t\t\tthis.localData.selectedEntityProperties.properties.filter+
(\n\t\t\t\t(property) =>\n\t\t\t\t\t!this.localData.selectedEntityProperties.keyProperties.some(\n\t\t\t\t\t\t(keyProperty) => keyProperty.name === property.name\n\t\t\t\t\t)\n\t\t\t);\n\t}\n\n\t/**\n\t * Load data of selected function to selectedFunctio+
n model\n\t */\n\tprivate handleFunctionChanged() {\n\t\tthis.resetFunctionInputs();\n\n\t\tconst selectedFunction = this.localData.selectedServiceFunctions.find(\n\t\t\t(func) => func.name === this.localData.selectedFunctionName\n\t\t);\n\n\t\t(this.get+
View().getModel(\"selectedFunction\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\tselectedFunction\n\t\t);\n\t}\n\n\t/**\n\t * ODATA: Create entity\n\t */\n\tprivate async execEntityCreate() {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tconst properti+
es = this.getEntityPropertyValues();\n\t\t\tconst keyProperties = properties.keyProperties;\n\t\t\tconst allProperties = { ...properties.properties, ...keyProperties };\n\t\t\tawait this.odataClient?.createEntity(\n\t\t\t\t{\n\t\t\t\t\tentityName: this.l+
ocalData.selectedEntityName,\n\t\t\t\t\tproperties: allProperties,\n\t\t\t\t\theaders: this.getHeaders(),\n\t\t\t\t}\n\t\t\t);\n\t\t\tthis.localData.response = \"\";\n\t\t\tMessageToast.show(\"Entity created\");\n\t\t} catch (error) {\n\t\t\tMessageBox.e+
rror((error as Error).toString());\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * ODATA: Delete entity\n\t */\n\tprivate async execEntityDelete() {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tconst properties = this.getEntityPrope+
rtyValues();\n\n\t\t\tif (\n\t\t\t\tObject.values(properties.keyProperties).some((value) => value === \"\")\n\t\t\t) {\n\t\t\t\tMessageBox.error(\n\t\t\t\t\t\"Please enter value for key properties: \" +\n\t\t\t\t\t\tObject.keys(properties.keyProperties).+
join(\", \")\n\t\t\t\t);\n\t\t\t\tthis.setBusy(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.odataClient?.deleteEntity(\n\t\t\t\t{\n\t\t\t\t\tentityName: this.localData.selectedEntityName,\n\t\t\t\t\tkeys: properties.keyProperties,\n\t\t\t\t\thea+
ders: this.getHeaders(),\n\t\t\t\t}\n\t\t\t);\n\t\t\tthis.localData.response = \"\";\n\t\t\tMessageToast.show(\"Entity deleted\");\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * ODATA: Get single entity\n\t */\n\tprivate async ex+
ecEntityGetSingle() {\n\t\tthis.setBusy(true);\n\n\t\ttry {\n\t\t\tconst properties = this.getEntityPropertyValues();\n\n\t\t\tif (\n\t\t\t\tObject.values(properties.keyProperties).some((value) => value === \"\")\n\t\t\t) {\n\t\t\t\tconst emptyKeyPropert+
ies = Object.keys(properties.keyProperties).filter(\n\t\t\t\t\t(key) => properties.keyProperties[key] === \"\"\n\t\t\t\t);\n\t\t\t\tMessageBox.error(\n\t\t\t\t\t\"Please enter value for key properties: \" +\n\t\t\t\t\t\temptyKeyProperties.join(\", \")\n\+
t\t\t\t);\n\t\t\t\tthis.setBusy(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst data = await this.odataClient?.getEntity({\n\t\t\t\tentityName: this.localData.selectedEntityName,\n\t\t\t\tkeys: properties.keyProperties,\n\t\t\t\theaders: this.getHeaders+
(),\n\t\t\t});\n\t\t\tthis.localData.response = JSON.stringify(data, null, 2);\n\t\t\tthis.setTableResponse(data);\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * ODATA: Read entity with filters, sorting, top, skip, headers\n\t */+
\n\tprivate async execEntityRead() {\n\t\tthis.setBusy(true);\n\n\t\tconst headers = this.getHeaders();\n\t\tconst filters = (\n\t\t\tthis.getView().getModel(\"entityFilters\") as JSONModel\n\t\t).getProperty(\"/\") as FilterRecord[];\n\t\tconst sorting +
= (\n\t\t\tthis.getView().getModel(\"entitySorting\") as JSONModel\n\t\t).getProperty(\"/\") as { property: string; direction: \"asc\" | \"desc\" }[];\n\n\t\ttry {\n\t\t\tconst response = await this.odataClient?.readEntity({\n\t\t\t\tentityName: this.loc+
alData.selectedEntityName,\n\t\t\t\tfilters: filters.map((filter) => {\n\t\t\t\t\treturn new Filter(filter.property, filter.operator, filter.value);\n\t\t\t\t}),\n\t\t\t\tsorting: sorting.map(\n\t\t\t\t\t(sort) => new Sorter(sort.property, sort.direction+
 === \"desc\")\n\t\t\t\t),\n\t\t\t\theaders: headers,\n\t\t\t\ttop: this.localData.top,\n\t\t\t\tskip: this.localData.skip,\n\t\t\t});\n\t\t\tthis.localData.response = JSON.stringify(response, null, 2);\n\t\t\tthis.setTableResponse(response);\n\n\t\t\tco+
nst history = (\n\t\t\t\tthis.getView().getModel(\"requestHistory\") as JSONModel\n\t\t\t).getProperty(\"/\") as RequestHistory[];\n\n\t\t\thistory.push({\n\t\t\t\tmethod: \"READ\",\n\t\t\t\tentity: this.localData.selectedEntityName,\n\t\t\t\ttimestamp: +
new Date().toISOString(),\n\t\t\t\tstatusCode: 200,\n\t\t\t\tresponse: this.localData.response,\n\t\t\t});\n\n\t\t\t(this.getView().getModel(\"requestHistory\") as JSONModel).setProperty(\n\t\t\t\t\"/\",\n\t\t\t\thistory\n\t\t\t);\n\t\t} finally {\n\t\t\+
tthis.setBusy(false);\n\t\t}\n\t}\n\n\tprivate getResultTable() {\n\t\treturn this.getById(\"idResponseTable\") as Table;\n\t}\n\n\tprivate clearResult() {\n\t\tconst table = this.getResultTable();\n\t\ttable.removeAllColumns();\n\t\ttable.removeAllItems+
();\n\t\tthis.localData.response = \"\";\n\t}\n\n\tprivate setTableResponse(data: unknown) {\n\t\tconst table = this.getById(\"idResponseTable\") as Table;\n\n\t\tconst propertiesMerged = {\n\t\t\t...this.localData.selectedEntityProperties.properties,\n\+
t\t\t...this.localData.selectedEntityProperties.keyProperties,\n\t\t};\n\t\tconst properties: { name: string; isKey: boolean }[] = [];\n\t\t// fill properties with name and isKey flag\n\t\tconst keys = Object.keys(propertiesMerged);\n\t\tfor (const key o+
f keys) {\n\t\t\tproperties.push({\n\t\t\t\tname: propertiesMerged[key].name,\n\t\t\t\tisKey: this.localData.selectedEntityProperties.keyProperties.some(\n\t\t\t\t\t(keyProp) => keyProp.name === propertiesMerged[key].name\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\+
n\t\t// Handle different data formats\n\t\tlet items: Record<string, unknown>[] = [];\n\t\tif (Array.isArray(data)) {\n\t\t\titems = data as Record<string, unknown>[];\n\t\t} else if (data && typeof data === \"object\") {\n\t\t\tconst dataObj = data as R+
ecord<string, unknown>;\n\t\t\tif (\"results\" in dataObj && Array.isArray(dataObj.results)) {\n\t\t\t\titems = dataObj.results as Record<string, unknown>[];\n\t\t\t} else {\n\t\t\t\titems = [dataObj];\n\t\t\t}\n\t\t}\n\n\t\tif (items.length === 0) {\n\t+
\t\treturn;\n\t\t}\n\n\t\t// Create columns with calculated widths\n\n\t\tfor (const property of properties) {\n\t\t\t// Calculate header text length\n\t\t\tconst headerText = property.name;\n\t\t\tlet maxLength = headerText.length;\n\n\t\t\t// Find long+
est value in this column\n\t\t\titems.forEach((item) => {\n\t\t\t\tconst value = item[property.name];\n\t\t\t\tlet displayValue = \"\";\n\t\t\t\tif (value !== null && value !== undefined) {\n\t\t\t\t\tif (typeof value === \"object\") {\n\t\t\t\t\t\tdispl+
ayValue = JSON.stringify(value, null, 2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisplayValue = String(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmaxLength = Math.max(maxLength, displayValue.length);\n\t\t\t});\n\n\t\t\t// Calculate width based on content\n\t\t\+
t// 8px per character for monospace font\n\t\t\t// Add 16px padding (8px on each side)\n\t\t\tconst columnWidth = maxLength * 10 + 16;\n\n\t\t\t// Create header with optional key icon\n\t\t\tconst headerContent = new VBox({\n\t\t\t\titems: [\n\t\t\t\t\tn+
ew HBox({\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tproperty.isKey\n\t\t\t\t\t\t\t\t? new Icon({\n\t\t\t\t\t\t\t\t\t\tsrc: \"sap-icon://key\",\n\t\t\t\t\t\t\t\t  }).addStyleClass(\"sapUiTinyMarginEnd\")\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tnew Text({ text:+
 headerText }),\n\t\t\t\t\t\t].filter(Boolean),\n\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t});\n\n\t\t\ttable.addColumn(\n\t\t\t\tnew Column({\n\t\t\t\t\theader: headerContent,\n\t\t\t\t\twidth: `${columnWidth}px`,\n\t\t\t\t})+
\n\t\t\t);\n\t\t}\n\n\t\tfor (const item of items) {\n\t\t\tconst cells = properties.map((property) => {\n\t\t\t\tconst value = item[property.name];\n\t\t\t\tlet displayValue = \"\";\n\t\t\t\tif (value !== null && value !== undefined) {\n\t\t\t\t\tif (ty+
peof value === \"object\") {\n\t\t\t\t\t\tdisplayValue = JSON.stringify(value, null, 2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisplayValue = String(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn new Text({ text: displayValue });\n\t\t\t});\n\n\t\t\ttable.ad+
dItem(\n\t\t\t\tnew ColumnListItem({\n\t\t\t\t\tcells: cells,\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * ODATA: Execute function\n\t */\n\tprivate async execFunctionRequest() {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tconst fn = (\n\t\t\t\tthis.g+
etView().getModel(\"selectedFunction\") as JSONModel\n\t\t\t).getProperty(\"/\") as MetadataFunction;\n\t\t\tconst parameters = this.getFunctionParameterValues();\n\n\t\t\tconst response = await this.odataClient?.executeFunction({\n\t\t\t\tfunctionName: +
fn.name,\n\t\t\t\tparameters: parameters,\n\t\t\t\tmethod: fn.method,\n\t\t\t});\n\n\t\t\tthis.localData.response = JSON.stringify(response, null, 2);\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\tprivate resetFilters() {\n\t\t(this.getVi+
ew().getModel(\"entityFilters\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\t[]\n\t\t);\n\t}\n\n\tprivate resetSorting() {\n\t\t(this.getView().getModel(\"entitySorting\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\t[]\n\t\t);\n\t}\n\n\tprivate a+
sync handleAddFilter() {\n\t\tconst entity = this.selectedService.entities.find(\n\t\t\t(e) => e.name === this.localData.selectedEntityName\n\t\t);\n\t\tif (!entity) {\n\t\t\tMessageBox.error(\"Entity not found\");\n\t\t\treturn;\n\t\t}\n\t\tconst filter+
 = await this.component.dialogManager.addFilter(\n\t\t\tentity.properties\n\t\t);\n\t\tconst filters = (\n\t\t\tthis.getView().getModel(\"entityFilters\") as JSONModel\n\t\t).getProperty(\"/\") as FilterRecord[];\n\n\t\tconst conflict = filters.find(\n\t+
\t\t(f) =>\n\t\t\t\tf.property === filter.property &&\n\t\t\t\tf.operator === filter.operator &&\n\t\t\t\tf.value === filter.value\n\t\t);\n\t\tif (conflict) {\n\t\t\tMessageBox.error(\"Conflict with existing record\");\n\t\t\treturn;\n\t\t}\n\n\t\tfilte+
rs.push(filter);\n\t\t(this.getView().getModel(\"entityFilters\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\tfilters\n\t\t);\n\t}\n\n\tprivate async handleAddHeader() {\n\t\tconst header = await this.component.dialogManager.showAddHeaderDialog();\n\+
t\tconst headers = (\n\t\t\tthis.getView().getModel(\"requestHeaders\") as JSONModel\n\t\t).getProperty(\"/\") as RequestHeader[];\n\t\tconst existingHeader = headers.find((h) => h.key === header.key);\n\t\tif (existingHeader) {\n\t\t\tMessageBox.error(\+
n\t\t\t\t`Header with key ${header.key} already exists. Please use a different key.`\n\t\t\t);\n\t\t} else {\n\t\t\theaders.push({\n\t\t\t\tkey: header.key,\n\t\t\t\tvalue: header.value,\n\t\t\t});\n\t\t\t(this.getView().getModel(\"requestHeaders\") as J+
SONModel).setProperty(\n\t\t\t\t\"/\",\n\t\t\t\theaders\n\t\t\t);\n\t\t}\n\t}\n\n\tonEditHeader(event: Button$PressEvent) {\n\t\tconst binding = event.getSource().getBindingContext(\"requestHeaders\");\n\t\tconst headers = (\n\t\t\tthis.getView().getMode+
l(\"requestHeaders\") as JSONModel\n\t\t).getProperty(\"/\") as RequestHeader[];\n\t\tconst obj = binding.getObject() as { key: string; value: string };\n\n\t\tconst submit = () => {\n\t\t\tif (valueInput.getValue() === \"\") {\n\t\t\t\tMessageToast.show+
(\"Please enter a value.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst index = headers.findIndex((header) => header.key === obj.key);\n\t\t\tif (index > -1) {\n\t\t\t\theaders[index].value = valueInput.getValue();\n\t\t\t\t(this.getView().getModel(\"request+
Headers\") as JSONModel).setProperty(\n\t\t\t\t\t\"/\",\n\t\t\t\t\theaders\n\t\t\t\t);\n\t\t\t}\n\t\t\tdialog.close();\n\t\t\tdialog.destroy();\n\t\t};\n\t\tconst valueInput = new Input({\n\t\t\tvalue: obj.value,\n\t\t\tsubmit: submit,\n\t\t});\n\t\tcons+
t dialog = new Dialog({\n\t\t\ttitle: \"Edit Value of \" + obj.key,\n\t\t\tcontentWidth: \"400px\",\n\t\t\tcontent: [\n\t\t\t\tnew VBox({\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Label({ text: \"Value\" }),\n\t\t\t\t\t\tvalueInput.addStyleClass(\"sapUiSmallM+
arginBottom\"),\n\t\t\t\t\t],\n\t\t\t\t}).addStyleClass(\"sapUiSmallMargin\"),\n\t\t\t],\n\t\t});\n\t\tdialog.setBeginButton(\n\t\t\tnew Button({\n\t\t\t\ttext: \"Save\",\n\t\t\t\tpress: submit,\n\t\t\t\ttype: \"Emphasized\",\n\t\t\t\ticon: \"sap-icon://+
accept\",\n\t\t\t})\n\t\t);\n\t\tdialog.setEndButton(\n\t\t\t\n\t\t\tnew Button({\n\t\t\t\ttext: \"Cancel\",\n\t\t\t\tpress: () => {\n\t\t\t\t\tdialog.close();\n\t\t\t\t\tdialog.destroy();\n\t\t\t\t},\n\t\t\t\ttype: \"Ghost\",\n\t\t\t\ticon: \"sap-icon:/+
/decline\",\n\t\t\t})\n\t\t);\n\t\tdialog.open();\n\t\tvalueInput.selectText(0, obj.value.length);\n\t}\n\n\tonDeleteHeader(event: Button$PressEvent) {\n\t\tconst binding = event.getSource().getBindingContext(\"requestHeaders\");\n\t\tconst obj = binding+
.getObject() as { key: string; value: string };\n\t\tconst headers = (\n\t\t\tthis.getView().getModel(\"requestHeaders\") as JSONModel\n\t\t).getProperty(\"/\") as RequestHeader[];\n\t\tconst index = headers.findIndex((header) => header.key === obj.key);+
\n\t\tif (index > -1) {\n\t\t\theaders.splice(index, 1);\n\t\t}\n\t\t(this.getView().getModel(\"requestHeaders\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\theaders\n\t\t);\n\t}\n\n\tprivate getHeaders() {\n\t\tconst headers: Record<string, string> +
= {};\n\t\tconst headerValues = (\n\t\t\tthis.getView().getModel(\"requestHeaders\") as JSONModel\n\t\t).getProperty(\"/\") as RequestHeader[];\n\t\theaderValues.forEach((header) => {\n\t\t\theaders[header.key] = header.value;\n\t\t});\n\t\treturn header+
s;\n\t}\n\n\tonCopyTodpupboard() {\n\t\tvoid this.handleCopy();\n\t}\n\n\tprivate async handleCopy() {\n\t\tconst response = this.localData.response;\n\t\tif (response) {\n\t\t\tawait Util.copy2Clipboard(response);\n\t\t\tMessageToast.show(\"Response cop+
ied to clipboard\");\n\t\t} else {\n\t\t\tMessageToast.show(\"No response to copy\");\n\t\t}\n\t}\n\n\tprivate values: Record<string, string | number | boolean> = {};\n\tpublic onInputPropertyChange(event: Input$ChangeEvent): void {\n\t\tconst source = e+
vent.getSource();\n\t\tconst propertyName = source.getName();\n\t\tconst value = source.getValue();\n\t\tthis.values[propertyName] = value;\n\t}\n\n\tprivate getById(id: string): Control | undefined {\n\t\tconst fragmentId = this.fragmentId;\n\t\tconst g+
lobalId = `${fragmentId}--${id}`;\n\n\t\tconst control = Core.byId(globalId);\n\t\treturn control as Control;\n\t}\n\n\tprivate getFunctionParameterValues() {\n\t\tconst parametersVbox = this.getById(\"idParametersVBox\") as VBox;\n\t\tconst parameterInp+
uts = Util.getAllInputValues(parametersVbox);\n\t\treturn parameterInputs;\n\t}\n\n\tprivate getEntityPropertyValues() {\n\t\tconst propertiesVbox = this.getById(\"idPropertiesVBox\") as VBox;\n\t\tconst keyPropertiesVbox = this.getById(\"idKeyProperties+
VBox\") as VBox;\n\t\tconst propertyInputs = Util.getAllInputValues(propertiesVbox);\n\t\tconst keyPropertyInputs = Util.getAllInputValues(keyPropertiesVbox);\n\n\t\treturn {\n\t\t\tproperties: propertyInputs,\n\t\t\tkeyProperties: keyPropertyInputs,\n\t+
\t};\n\t}\n\n\tprivate resetEntityInputs() {\n\t\tconst propertiesVbox = this.getById(\"idPropertiesVBox\") as VBox;\n\t\tconst keyPropertiesVbox = this.getById(\"idKeyPropertiesVBox\") as VBox;\n\t\tUtil.resetInputs(propertiesVbox);\n\t\tUtil.resetInput+
s(keyPropertiesVbox);\n\t}\n\n\tprivate resetFunctionInputs() {\n\t\tconst parametersVbox = this.getById(\"idParametersVBox\") as VBox;\n\t\tUtil.resetInputs(parametersVbox);\n\t}\n\n\t/**\n\t * Filter: delete filter configuration\n\t */\n\tonButtonFilte+
rDeletePress(event: Button$PressEvent) {\n\t\tconst binding = event.getSource().getBindingContext(\"entityFilters\");\n\t\tconst obj = binding.getObject() as FilterRecord;\n\t\tvoid this.handleButtonFilterDeletePress(obj);\n\t}\n\n\t/**\n\t * Filter: edi+
t filter configuration\n\t */\n\tonButtonFilterEditPress(event: Button$PressEvent) {\n\t\tconst binding = event.getSource().getBindingContext(\"entityFilters\");\n\t\tconst obj = binding.getObject() as FilterRecord;\n\t\tvoid this.handleButtonFilterEditP+
ress(obj);\n\t}\n\n\t/**\n\t * Filter: delete filter configuration\n\t */\n\tprivate handleButtonFilterDeletePress(obj: FilterRecord) {\n\t\tconst filters = (\n\t\t\tthis.getView().getModel(\"entityFilters\") as JSONModel\n\t\t).getProperty(\"/\") as Fil+
terRecord[];\n\t\tconst filteredList = filters.filter(\n\t\t\t(filter) =>\n\t\t\t\tfilter.property !== obj.property &&\n\t\t\t\tfilter.operator !== obj.operator &&\n\t\t\t\tfilter.value !== obj.value\n\t\t);\n\t\t(this.getView().getModel(\"entityFilters\+
") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\tfilteredList\n\t\t);\n\t}\n\n\t/**\n\t * Filter: edit filter configuration\n\t */\n\tprivate async handleButtonFilterEditPress(obj: FilterRecord) {\n\t\tconst entity = this.selectedService.entities.find(+
\n\t\t\t(e) => e.name === this.localData.selectedEntityName\n\t\t);\n\t\tif (!entity) {\n\t\t\tMessageBox.error(\"Entity not found\");\n\t\t\treturn;\n\t\t}\n\t\tconst filters = (\n\t\t\tthis.getView().getModel(\"entityFilters\") as JSONModel\n\t\t).getP+
roperty(\"/\") as FilterRecord[];\n\t\tconst index = filters.findIndex(\n\t\t\t(f) =>\n\t\t\t\tf.property === obj.property &&\n\t\t\t\tf.operator === obj.operator &&\n\t\t\t\tf.value === obj.value\n\t\t);\n\t\tconst updated = await this.component.dialogM+
anager.editFilter(\n\t\t\tobj,\n\t\t\tentity.properties\n\t\t);\n\n\t\tconst conflict = filters.find(\n\t\t\t(f) =>\n\t\t\t\tf.property === updated.property &&\n\t\t\t\tf.operator === updated.operator &&\n\t\t\t\tf.value === updated.value\n\t\t);\n\t\tif+
 (conflict) {\n\t\t\tMessageBox.error(\"Conflict with existing record\");\n\t\t\treturn;\n\t\t}\n\n\t\tfilters[index] = updated;\n\t\t(this.getView().getModel(\"entityFilters\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\tfilters\n\t\t);\n\t}\n\n\ton+
ButtonViewResponsePress(event: Button$PressEvent) {\n\t\tconst binding = event.getSource().getBindingContext(\"requestHistory\");\n\t\tconst historyItem = binding.getObject() as RequestHistory;\n\t\tthis.localData.response = historyItem.response;\n\t}\n\+
n\t/**\n\t * Sorter: add sort configuration\n\t */\n\tprivate async handleAddSort() {\n\t\tconst entity = this.selectedService.entities.find(\n\t\t\t(e) => e.name === this.localData.selectedEntityName\n\t\t);\n\t\tif (!entity) {\n\t\t\tMessageBox.error(\+
"Entity not found\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst sort = await this.component.dialogManager.addSort(entity.properties);\n\n\t\tconst sorting = (\n\t\t\tthis.getView().getModel(\"entitySorting\") as JSONModel\n\t\t).getProperty(\"/\") as { property+
: string; direction: \"asc\" | \"desc\" }[];\n\n\t\tconst conflict = sorting.find((s) => s.property === sort.property);\n\t\tif (conflict) {\n\t\t\tMessageBox.error(\"Property already sorted\");\n\t\t\treturn;\n\t\t}\n\n\t\tsorting.push(sort);\n\t\t(this+
.getView().getModel(\"entitySorting\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\tsorting\n\t\t);\n\t}\n\n\t/**\n\t * Sorter: delete sort configuration\n\t */\n\tprivate handleButtonSortDeletePress(obj: {\n\t\tproperty: string;\n\t\tdirection: \"asc+
\" | \"desc\";\n\t}) {\n\t\tconst sorting = (\n\t\t\tthis.getView().getModel(\"entitySorting\") as JSONModel\n\t\t).getProperty(\"/\") as { property: string; direction: \"asc\" | \"desc\" }[];\n\t\tconst filteredList = sorting.filter(\n\t\t\t(sort) => so+
rt.property !== obj.property\n\t\t);\n\t\t(this.getView().getModel(\"entitySorting\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\tfilteredList\n\t\t);\n\t}\n\n\t/**\n\t * Project: save configuration to server\n\t */\n\tprivate async handleSaveConfigu+
ration() {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tconst projectName =\n\t\t\t\tawait this.component.dialogManager.showSaveProjectDialog();\n\t\t\tconst localData = (\n\t\t\t\tthis.getView().getModel(\"local\") as JSONModel\n\t\t\t).getProperty(\"/\")+
 as MainViewModel;\n\t\t\tconst filters = (\n\t\t\t\tthis.getView().getModel(\"entityFilters\") as JSONModel\n\t\t\t).getProperty(\"/\") as FilterRecord[];\n\t\t\tconst headers = (\n\t\t\t\tthis.getView().getModel(\"requestHeaders\") as JSONModel\n\t\t\t+
).getProperty(\"/\") as RequestHeader[];\n\t\t\tconst sorters = (\n\t\t\t\tthis.getView().getModel(\"entitySorting\") as JSONModel\n\t\t\t).getProperty(\"/\") as { property: string; direction: \"asc\" | \"desc\" }[];\n\t\t\tconst selectedService = (\n\t\+
t\t\tthis.getView().getModel(\"selectedService\") as JSONModel\n\t\t\t).getProperty(\"/\") as SelectedServiceModel;\n\n\t\t\tconst project = {\n\t\t\t\tProjectName: projectName,\n\t\t\t\tOdatatype: selectedService.service.ODataType,\n\t\t\t\tServiceName:+
 selectedService.service.ServiceName,\n\t\t\t\tServicePath: selectedService.service.ServicePath,\n\t\t\t\tServiceVersion: selectedService.service.Version,\n\t\t\t\tEntityMethod: localData.selectedMethod,\n\t\t\t\tEntityName: localData.selectedEntityName,+
\n\t\t\t\tFunctionName: localData.selectedFunctionName,\n\t\t\t\tActionName: \"\",\n\t\t\t\tRequestType: localData.resourceType,\n\t\t\t\tTop: localData.top ?? 0,\n\t\t\t\tSkip: localData.skip ?? 0,\n\t\t\t\tHeaders: JSON.stringify(headers),\n\t\t\t\tFil+
ters: JSON.stringify(filters),\n\t\t\t\tSorters: JSON.stringify(sorters),\n\t\t\t} as Project;\n\n\t\t\tawait this.component.requests.createProject(project);\n\t\t\tMessageToast.show(\"Configuration saved successfully\");\n\t\t} finally {\n\t\t\tthis.set+
Busy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Project: load configuration from server\n\t */\n\tprivate async handleLoadConfiguration() {\n\t\ttry {\n\t\t\tconst selectedProject =\n\t\t\t\tawait this.component.dialogManager.showProjectListDialog();\n\n\t\t\tif+
 (selectedProject) {\n\t\t\t\tconst localData = (\n\t\t\t\t\tthis.getView().getModel(\"local\") as JSONModel\n\t\t\t\t).getProperty(\"/\") as MainViewModel;\n\n\t\t\t\tconst service = {\n\t\t\t\t\tServiceName: selectedProject.ServiceName,\n\t\t\t\t\tODat+
aType: selectedProject.Odatatype,\n\t\t\t\t\tServicePath: selectedProject.ServicePath,\n\t\t\t\t\tVersion: selectedProject.ServiceVersion,\n\t\t\t\t} as ServiceEntity;\n\n\t\t\t\tawait this.loadService(service);\n\n\t\t\t\tlocalData.resourceType = select+
edProject.RequestType;\n\t\t\t\tlocalData.selectedEntityName = selectedProject.EntityName;\n\t\t\t\tlocalData.selectedFunctionName = selectedProject.FunctionName;\n\t\t\t\t//this.localData.selectedActionName = selectedProject.ActionName;\n\t\t\t\tlocalDa+
ta.selectedMethod = selectedProject.EntityMethod;\n\t\t\t\tlocalData.top = selectedProject.Top\n\t\t\t\t\t? selectedProject.Top\n\t\t\t\t\t: 10;\n\t\t\t\tlocalData.skip = selectedProject.Skip\n\t\t\t\t\t? selectedProject.Skip\n\t\t\t\t\t: 0;\n\n\t\t\t\t(+
this.getView().getModel(\"local\") as JSONModel).setProperty(\n\t\t\t\t\t\"/\",\n\t\t\t\t\tlocalData\n\t\t\t\t);\n\t\t\t\t(this.getView().getModel(\"entityFilters\") as JSONModel).setProperty(\n\t\t\t\t\t\"/\",\n\t\t\t\t\tJSON.parse(selectedProject.Filte+
rs) as FilterRecord[]\n\t\t\t\t);\n\t\t\t\t(this.getView().getModel(\"entitySorting\") as JSONModel).setProperty(\n\t\t\t\t\t\"/\",\n\t\t\t\t\tJSON.parse(selectedProject.Sorters)\n\t\t\t\t);\n\t\t\t\t(this.getView().getModel(\"requestHeaders\") as JSONMo+
del).setProperty(\n\t\t\t\t\t\"/\",\n\t\t\t\t\tJSON.parse(selectedProject.Headers)\n\t\t\t\t);\n\n\t\t\t\tMessageToast.show(\"Configuration loaded successfully\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error instanceof Error && error.message !== \"D+
ialog closed\") {\n\t\t\t\tMessageBox.error(`Error loading configuration: ${error.message}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setTitle(title: string) {\n\t\tthrow new Error(\"Not implemented: \" + title);\n\t}\n}\n"],"mappings":"wjBACOA,EAAcC,EAAAC,GAAA+
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","ignoreList":[]}                                                                                                            