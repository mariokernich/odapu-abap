{"version":3,"file":"OData.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Constants","__Constants","Util","__Util","OData2Client","__OData2Client","OData4Client","__OData4Client","OData","extend","constructor","prot+
otype","apply","this","arguments","selectedService","service","entities","actions","localData","resourceType","selectedEntityName","selectedFunctionName","response","selectedMethod","selectedServiceFunctions","selectedEntityProperties","properties","keyP+
roperties","entityCount","functionCount","actionCount","top","skip","dark","statusCode","view","folderTreeIcon","sap","ui","require","toUrl","dataViewMode","selectedServiceActions","fragmentId","values","onInit","_onInit","BaseController.prototype.onInit+
.call","handleInit","registerModels","_registerModels","getView","setModel","JSONModel","name","returnType","entitySet","method","parameters","async","_handleInit","getGlobalModel","dataLoaded","setBusy","model","getOwnerComponent","getModel","metadataLo+
aded","setSizeLimit","SERVICE_QUERY_LIMIT","Device","support","websocket","MessageToast","show","component","getText","onSelectService","_onSelectService","handleServiceSelection","onSelectEntity","_onSelectEntity","handleEntityChanged","onSelectFunction+
","_onSelectFunction","handleFunctionChanged","onSelectAction","_onSelectAction","handleActionChanged","onAddFilterButtonPress","_onAddFilterButtonPress","handleAddFilter","onAddSortButtonPress","_onAddSortButtonPress","handleAddSort","onButtonSortDelete+
Press","_onButtonSortDeletePress","event","binding","getSource","getBindingContext","obj","getObject","handleButtonSortDeletePress","onSendRequest","_onSendRequest","clearResult","execEntityRead","execEntityGetSingle","execEntityCreate","execEntityDelete+
","execFunctionRequest","Error","onShowMetadata","_onShowMetadata","xml","odataClient","getMetadataText","dialogManager","showXmlCodeEditor","onAddHeader","_onAddHeader","handleAddHeader","onButtonSaveConfigurationPress","_onButtonSaveConfigurationPress"+
,"handleSaveConfiguration","onButtonLoadConfigurationPress","_onButtonLoadConfigurationPress","handleLoadConfiguration","_handleServiceSelection","pickService","loadService","_loadService","setTitle","ServiceName","destroy","undefined","ODataType","Servi+
cePath","initAsync","handleServiceSelected","_handleServiceSelected","resetFilters","resetSorting","resetEntityInputs","getEntities","getFunctions","getActions","length","selectedActionName","_pickService","_handleEntityChanged","find","entity","keys","f+
ilter","property","some","keyProperty","_handleFunctionChanged","resetFunctionInputs","selectedFunction","func","setProperty","_handleActionChanged","selectedAction","action","_execEntityCreate","getEntityPropertyValues","allProperties","createEntity","e+
ntityName","headers","getHeaders","error","MessageBox","toString","_execEntityDelete","Object","value","join","deleteEntity","_execEntityGetSingle","emptyKeyProperties","key","data","getEntity","JSON","stringify","setTableResponse","_execEntityRead","fil+
ters","getProperty","sorting","readEntity","map","Filter","operator","sort","Sorter","direction","history","push","timestamp","Date","toISOString","getResultTable","_getResultTable","getById","_clearResult","table","removeAllColumns","removeAllItems","_s+
etTableResponse","propertiesMerged","isKey","keyProp","items","Array","isArray","dataObj","results","headerText","maxLength","forEach","item","displayValue","String","Math","max","columnWidth","headerContent","VBox","HBox","Icon","src","addStyleClass","T+
ext","text","Boolean","alignItems","addColumn","Column","header","width","cells","addItem","ColumnListItem","_execFunctionRequest","fn","getFunctionParameterValues","executeFunction","functionName","_resetFilters","_resetSorting","_handleAddFilter","e","+
addFilter","conflict","f","_handleAddHeader","showAddHeaderDialog","existingHeader","h","onEditHeader","_onEditHeader","submit","valueInput","getValue","index","findIndex","dialog","close","Input","Dialog","title","contentWidth","content","Label","setBeg+
inButton","Button","press","type","icon","setEndButton","open","selectText","onDeleteHeader","_onDeleteHeader","splice","_getHeaders","headerValues","onSourceCopy","_onSourceCopy","handleCopy","onSourceDownload","_onSourceDownload","download","_handleCop+
y","copy2Clipboard","onInputPropertyChange","_onInputPropertyChange","source","propertyName","getName","_getById","id","globalId","control","Core","byId","_getFunctionParameterValues","parametersVbox","parameterInputs","getAllInputValues","_getEntityProp+
ertyValues","propertiesVbox","keyPropertiesVbox","propertyInputs","keyPropertyInputs","_resetEntityInputs","resetInputs","_resetFunctionInputs","onButtonFilterDeletePress","_onButtonFilterDeletePress","handleButtonFilterDeletePress","onButtonFilterEditPr+
ess","_onButtonFilterEditPress","handleButtonFilterEditPress","_handleButtonFilterDeletePress","filteredList","_handleButtonFilterEditPress","updated","editFilter","onButtonViewResponsePress","_onButtonViewResponsePress","historyItem","_handleAddSort","a+
ddSort","s","_handleButtonSortDeletePress","_handleSaveConfiguration","projectName","showSaveProjectDialog","sorters","project","ProjectName","Odatatype","ServiceVersion","Version","EntityMethod","EntityName","FunctionName","ActionName","RequestType","To+
p","Skip","Headers","Filters","Sorters","requests","createProject","_handleLoadConfiguration","selectedProject","showProjectListDialog","parse","message","_setTitle"],"sources":["OData.controller.ts"],"sourcesContent":["import ODataModel from \"sap/ui/mo+
del/odata/v2/ODataModel\";\nimport BaseController from \"./BaseController\";\nimport Dialog from \"sap/m/Dialog\";\nimport Button, { Button$PressEvent } from \"sap/m/Button\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Label from \"s+
ap/m/Label\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport {\n\tFilterRecord,\n\tMainViewModel,\n\tMetadataFunction,\n\tProject,\n\tRequestHeader,\n\tRequestHistory,\n\tSelectedFunctionModel,\n\tSelectedServiceModel,\n\tServiceEntity,\n} fro+
m \"../Types\";\nimport Constants from \"../Constants\";\nimport Input from \"sap/m/Input\";\nimport VBox from \"sap/m/VBox\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Util from \"../util/Util\";\nimport Device from \"sap/ui/Device\";\nimpor+
t Control from \"sap/ui/core/Control\";\nimport OData2Client from \"../util/OData2Client\";\nimport IODataClient from \"../util/IODataClient\";\nimport OData4Client from \"../util/OData4Client\";\nimport Filter from \"sap/ui/model/Filter\";\nimport Core +
from \"sap/ui/core/Core\";\nimport Table from \"sap/m/Table\";\nimport Column from \"sap/m/Column\";\nimport Text from \"sap/m/Text\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport HBox from \"sap/m/HBox\";\nimport Icon from \"sap/ui/core+
/Icon\";\nimport { Input$ChangeEvent } from \"sap/ui/webc/main/Input\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport Context from \"sap/ui/model/odata/v2/Context\";\n\n/**\n * @namespace de.kernich.odpu.controller\n */\nexport default class OData+
 extends BaseController {\n\tprivate selectedService: SelectedServiceModel = {\n\t\tservice: null,\n\t\tentities: null,\n\t\tactions: null,\n\t};\n\n\tprivate localData: MainViewModel = {\n\t\tresourceType: \"entity\",\n\t\tselectedEntityName: \"\",\n\t\+
tselectedFunctionName: \"\",\n\t\tresponse: \"\",\n\t\tselectedMethod: \"GET\",\n\t\tselectedServiceFunctions: [],\n\t\tselectedEntityProperties: {\n\t\t\tproperties: [],\n\t\t\tkeyProperties: [],\n\t\t},\n\t\tentityCount: 0,\n\t\tfunctionCount: 0,\n\t\t+
actionCount: 0,\n\t\ttop: 10,\n\t\tskip: 0,\n\t\tdark: false,\n\t\tstatusCode: 0,\n\t\tview: \"odata\",\n\t\tfolderTreeIcon: sap.ui.require.toUrl(\n\t\t\t\"de/kernich/odpu/img/folder-tree-light.svg\"\n\t\t),\n\t\tdataViewMode: \"json\",\n\t\tselectedServ+
iceActions: [],\n\t};\n\tprivate odataClient?: IODataClient;\n\tpublic fragmentId: string = \"\";\n\n\t/**\n\t * Initialize the controller\n\t */\n\tonInit() {\n\t\tsuper.onInit();\n\t\tvoid this.handleInit();\n\t\tthis.registerModels();\n\t}\n\n\t/**\n\+
t * Register models for the view\n\t */\n\tprivate registerModels() {\n\t\tthis.getView()?.setModel(new JSONModel(this.localData, true), \"local\");\n\t\tthis.getView()?.setModel(\n\t\t\tnew JSONModel(this.selectedService, true),\n\t\t\t\"selectedService+
\"\n\t\t);\n\t\tthis.getView()?.setModel(\n\t\t\tnew JSONModel(\n\t\t\t\t{\n\t\t\t\t\tname: \"\",\n\t\t\t\t\treturnType: \"\",\n\t\t\t\t\tentitySet: \"\",\n\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\tparameters: [],\n\t\t\t\t} as SelectedFunctionModel,\n\t\t\t+
\ttrue\n\t\t\t),\n\t\t\t\"selectedFunction\"\n\t\t);\n\t\tthis.getView()?.setModel(\n\t\t\tnew JSONModel(\n\t\t\t\t{\n\t\t\t\t\tname: \"\",\n\t\t\t\t\treturnType: \"\",\n\t\t\t\t\tentitySet: \"\",\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\tparameters: [],\n+
\t\t\t\t} as SelectedFunctionModel,\n\t\t\t\ttrue\n\t\t\t),\n\t\t\t\"selectedAction\"\n\t\t);\n\t\tthis.getView()?.setModel(new JSONModel([], true), \"entityFilters\");\n\t\tthis.getView()?.setModel(new JSONModel([], true), \"entitySorting\");\n\t\tthis.+
getView()?.setModel(new JSONModel([], true), \"requestHistory\");\n\t\tthis.getView()?.setModel(new JSONModel([], true), \"requestHeaders\");\n\t}\n\n\t/**\n\t * Handle initialization of the controller\n\t */\n\tprivate async handleInit() {\n\t\tawait th+
is.getGlobalModel().dataLoaded();\n\t\tthis.setBusy(true);\n\n\t\tconst model = this.getOwnerComponent().getModel() as ODataModel;\n\t\tawait model.metadataLoaded(true);\n\t\tmodel.setSizeLimit(Constants.SERVICE_QUERY_LIMIT);\n\n\t\tthis.setBusy(false);\+
n\n\t\tif (!Device.support.websocket) {\n\t\t\tMessageToast.show(this.component.getText(\"msg.websocketNotSupported\"));\n\t\t}\n\t}\n\n\t/**\n\t * Event handler: Select service\n\t */\n\tonSelectService() {\n\t\tvoid this.handleServiceSelection();\n\t}\+
n\n\t/**\n\t * Event handler: Entity selection changed\n\t */\n\tonSelectEntity() {\n\t\tthis.handleEntityChanged();\n\t}\n\n\t/**\n\t * Event handler: Function selection changed\n\t */\n\tonSelectFunction() {\n\t\tthis.handleFunctionChanged();\n\t}\n\n\+
t/**\n\t * Event handler: Action selection changed\n\t */\n\tonSelectAction() {\n\t\tthis.handleActionChanged();\n\t}\n\n\t/**\n\t * Event handler: Add filter button pressed\n\t */\n\tonAddFilterButtonPress() {\n\t\tvoid this.handleAddFilter();\n\t}\n\n\+
t/**\n\t * Event handler: Add sorter button pressed\n\t */\n\tonAddSortButtonPress() {\n\t\tvoid this.handleAddSort();\n\t}\n\n\t/**\n\t * Event handler: Delete sorter button pressed\n\t */\n\tonButtonSortDeletePress(event: Button$PressEvent) {\n\t\tcons+
t binding = event.getSource().getBindingContext(\"entitySorting\") as Context;\n\t\tconst obj = binding.getObject() as {\n\t\t\tproperty: string;\n\t\t\tdirection: \"asc\" | \"desc\";\n\t\t};\n\t\tvoid this.handleButtonSortDeletePress(obj);\n\t}\n\n\t/**+
\n\t * Event handler: Execute request\n\t */\n\tonSendRequest() {\n\t\tthis.clearResult();\n\t\tif (this.localData.resourceType === \"entity\") {\n\t\t\tswitch (this.localData.selectedMethod) {\n\t\t\t\tcase \"GET\":\n\t\t\t\t\tvoid this.execEntityRead()+
;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"GETBY\":\n\t\t\t\t\tvoid this.execEntityGetSingle();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"POST\":\n\t\t\t\t\tvoid this.execEntityCreate();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"DELETE\":\n\t\t\t\t\tvoid this.execEntityDelete(+
);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (this.localData.resourceType === \"function\") {\n\t\t\tvoid this.execFunctionRequest();\n\t\t} else {\n\t\t\tthrow new Error(`Unknown resource type: ${this.localData.resourceType}`);\n\t\t}\n\t}\n\n\t/**\n\t +
* Event handler: Show metadata button pressed\n\t */\n\tpublic onShowMetadata() {\n\t\tconst xml = this.odataClient?.getMetadataText();\n\t\tif (!xml) return;\n\t\tvoid this.component.dialogManager.showXmlCodeEditor(xml);\n\t}\n\n\t/**\n\t * Event handle+
r: Add header button pressed\n\t */\n\tonAddHeader() {\n\t\tvoid this.handleAddHeader();\n\t}\n\n\t/**\n\t * Event handler: Save configuration button pressed\n\t */\n\tonButtonSaveConfigurationPress() {\n\t\tvoid this.handleSaveConfiguration();\n\t}\n\n\+
t/**\n\t * Event handler: Load configuration button pressed\n\t */\n\tonButtonLoadConfigurationPress() {\n\t\tvoid this.handleLoadConfiguration();\n\t}\n\n\t/**\n\t * Selected service and load data from selected service\n\t * This will load entities, fun+
ctions and actions\n\t */\n\tprivate async handleServiceSelection() {\n\t\tconst service = await this.pickService();\n\t\tawait this.loadService(service);\n\t}\n\n\t/**\n\t * Load service data\n\t * @param service - service entity\n\t */\n\tprivate async+
 loadService(service: ServiceEntity) {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tthis.selectedService.service = service;\n\t\t\tthis.setTitle(service.ServiceName);\n\n\t\t\tthis.localData.selectedEntityName = \"\";\n\t\t\tthis.localData.selectedFunction+
Name = \"\";\n\t\t\tthis.localData.selectedServiceFunctions = [];\n\t\t\tthis.localData.resourceType = \"entity\";\n\t\t\tthis.localData.selectedMethod = \"GET\";\n\n\t\t\tthis.odataClient?.destroy();\n\t\t\tthis.odataClient = undefined;\n\n\t\t\t// base+
d on ODATA version, create the correct client\n\t\t\tswitch (service.ODataType) {\n\t\t\t\tcase \"2\":\n\t\t\t\t\tthis.odataClient = new OData2Client(service.ServicePath);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"4\":\n\t\t\t\t\tthis.odataClient = new OData4Cli+
ent(service.ServicePath);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tMessageToast.show(this.component.getText(\"msg.serviceTypeNotSupported\"));\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tawait this.odataClient?.initAsync();\n\t\t\tthis.handleServiceSelecte+
d();\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Handle service selected\n\t */\n\tprivate handleServiceSelected() {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tthis.resetFilters();\n\t\t\tthis.resetSorting();\n\t\t\tthis.reset+
EntityInputs();\n\n\t\t\tthis.selectedService.entities = this.odataClient?.getEntities() || [];\n\t\t\tthis.localData.selectedServiceFunctions =\n\t\t\t\tthis.odataClient?.getFunctions() || [];\n\n\t\t\tthis.localData.selectedServiceActions =\n\t\t\t\tth+
is.odataClient?.getActions() || [];\n\n\t\t\tthis.localData.entityCount = this.selectedService.entities?.length || 0;\n\t\t\tthis.localData.functionCount =\n\t\t\t\tthis.localData.selectedServiceFunctions?.length || 0;\n\t\t\tthis.localData.actionCount =+
 this.localData.selectedServiceActions?.length || 0;\n\n\t\t\tif (this.selectedService.entities?.length > 0) {\n\t\t\t\tthis.localData.selectedEntityName =\n\t\t\t\t\tthis.selectedService.entities[0].name;\n\t\t\t\tthis.handleEntityChanged();\n\t\t\t}\n\+
n\t\t\tif (this.localData.selectedServiceFunctions?.length > 0) {\n\t\t\t\tthis.localData.selectedFunctionName =\n\t\t\t\t\tthis.localData.selectedServiceFunctions[0].name;\n\t\t\t\tthis.handleFunctionChanged();\n\t\t\t}\n\n\t\t\tif (this.localData.selec+
tedServiceActions?.length > 0) {\n\t\t\t\tthis.localData.selectedActionName =\n\t\t\t\t\tthis.localData.selectedServiceActions[0].name;\n\t\t\t\tthis.handleActionChanged();\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * +
Show dialog to pick an ODATA service\n\t */\n\tprivate async pickService() {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\treturn await this.component.dialogManager.pickService();\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Load +
data of selected entity to selectedService model\n\t */\n\tprivate handleEntityChanged() {\n\t\tthis.resetFilters();\n\t\tthis.resetSorting();\n\t\tthis.resetEntityInputs();\n\t\tconst properties = this.selectedService.entities.find(\n\t\t\t(entity) => e+
ntity.name === this.localData.selectedEntityName\n\t\t)?.properties;\n\t\tthis.localData.selectedEntityProperties.properties = properties || [];\n\t\tthis.localData.selectedEntityProperties.keyProperties =\n\t\t\tthis.selectedService.entities.find(\n\t\t+
\t\t(entity) => entity.name === this.localData.selectedEntityName\n\t\t\t)?.keys || [];\n\n\t\tthis.localData.selectedEntityProperties.properties =\n\t\t\tthis.localData.selectedEntityProperties.properties.filter(\n\t\t\t\t(property) =>\n\t\t\t\t\t!this.+
localData.selectedEntityProperties.keyProperties.some(\n\t\t\t\t\t\t(keyProperty) => keyProperty.name === property.name\n\t\t\t\t\t)\n\t\t\t);\n\t}\n\n\t/**\n\t * Load data of selected function to selectedFunction model\n\t */\n\tprivate handleFunctionCh+
anged() {\n\t\tthis.resetFunctionInputs();\n\n\t\tconst selectedFunction = this.localData.selectedServiceFunctions.find(\n\t\t\t(func) => func.name === this.localData.selectedFunctionName\n\t\t);\n\n\t\t(this.getView().getModel(\"selectedFunction\") as J+
SONModel).setProperty(\n\t\t\t\"/\",\n\t\t\tselectedFunction\n\t\t);\n\t}\n\n\t/**\n\t * Load data of selected action to selectedAction model\n\t */\n\tprivate handleActionChanged() {\n\t\tthis.resetFunctionInputs();\n\n\t\tconst selectedAction = this.lo+
calData.selectedServiceActions?.find(\n\t\t\t(action) => action.name === this.localData.selectedActionName\n\t\t);\n\n\t\tif (selectedAction) {\n\t\t\t(this.getView()?.getModel(\"selectedAction\") as JSONModel).setProperty(\n\t\t\t\t\"/\",\n\t\t\t\tselec+
tedAction\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * ODATA: Create entity\n\t */\n\tprivate async execEntityCreate() {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tconst properties = this.getEntityPropertyValues();\n\t\t\tconst keyProperties = properties.keyProp+
erties;\n\t\t\tconst allProperties = { ...properties.properties, ...keyProperties };\n\t\t\tawait this.odataClient?.createEntity(\n\t\t\t\t{\n\t\t\t\t\tentityName: this.localData.selectedEntityName,\n\t\t\t\t\tproperties: allProperties,\n\t\t\t\t\theader+
s: this.getHeaders(),\n\t\t\t\t}\n\t\t\t);\n\t\t\tthis.localData.response = \"\";\n\t\t\tMessageToast.show(this.component.getText(\"msg.entityCreated\"));\n\t\t} catch (error) {\n\t\t\tMessageBox.error((error as Error).toString());\n\t\t} finally {\n\t\t+
\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * ODATA: Delete entity\n\t */\n\tprivate async execEntityDelete() {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tconst properties = this.getEntityPropertyValues();\n\n\t\t\tif (\n\t\t\t\tObject.values(propert+
ies.keyProperties).some((value) => value === \"\")\n\t\t\t) {\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tthis.component.getText(\"msg.enterKeyProperties\", [Object.keys(properties.keyProperties).join(\", \")])\n\t\t\t\t);\n\t\t\t\tthis.setBusy(false);\n\t\t\t+
\treturn;\n\t\t\t}\n\n\t\t\tawait this.odataClient?.deleteEntity(\n\t\t\t\t{\n\t\t\t\t\tentityName: this.localData.selectedEntityName,\n\t\t\t\t\tkeys: properties.keyProperties,\n\t\t\t\t\theaders: this.getHeaders(),\n\t\t\t\t}\n\t\t\t);\n\t\t\tthis.loca+
lData.response = \"\";\n\t\t\tMessageToast.show(this.component.getText(\"msg.entityDeleted\"));\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * ODATA: Get single entity\n\t */\n\tprivate async execEntityGetSingle() {\n\t\tthis.set+
Busy(true);\n\n\t\ttry {\n\t\t\tconst properties = this.getEntityPropertyValues();\n\n\t\t\tif (\n\t\t\t\tObject.values(properties.keyProperties).some((value) => value === \"\")\n\t\t\t) {\n\t\t\t\tconst emptyKeyProperties = Object.keys(properties.keyPro+
perties).filter(\n\t\t\t\t\t(key) => properties.keyProperties[key] === \"\"\n\t\t\t\t);\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tthis.component.getText(\"msg.enterKeyProperties\", [emptyKeyProperties.join(\", \")])\n\t\t\t\t);\n\t\t\t\tthis.setBusy(false);\+
n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst data = await this.odataClient?.getEntity({\n\t\t\t\tentityName: this.localData.selectedEntityName,\n\t\t\t\tkeys: properties.keyProperties,\n\t\t\t\theaders: this.getHeaders(),\n\t\t\t});\n\t\t\tthis.localData.res+
ponse = JSON.stringify(data, null, 2);\n\t\t\tthis.setTableResponse(data);\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * ODATA: Read entity with filters, sorting, top, skip, headers\n\t */\n\tprivate async execEntityRead() {\n\t+
\tthis.setBusy(true);\n\n\t\tconst headers = this.getHeaders();\n\t\tconst filters = (\n\t\t\tthis.getView()?.getModel(\"entityFilters\") as JSONModel\n\t\t).getProperty(\"/\") as FilterRecord[];\n\t\tconst sorting = (\n\t\t\tthis.getView()?.getModel(\"e+
ntitySorting\") as JSONModel\n\t\t).getProperty(\"/\") as { property: string; direction: \"asc\" | \"desc\" }[];\n\n\t\ttry {\n\t\t\tconst response = await this.odataClient?.readEntity({\n\t\t\t\tentityName: this.localData.selectedEntityName,\n\t\t\t\tfi+
lters: filters.map((filter) => {\n\t\t\t\t\treturn new Filter(filter.property, filter.operator, filter.value);\n\t\t\t\t}),\n\t\t\t\tsorting: sorting.map(\n\t\t\t\t\t(sort) => new Sorter(sort.property, sort.direction === \"desc\")\n\t\t\t\t),\n\t\t\t\the+
aders: headers,\n\t\t\t\ttop: this.localData.top,\n\t\t\t\tskip: this.localData.skip,\n\t\t\t});\n\t\t\tthis.localData.response = JSON.stringify(response, null, 2);\n\t\t\tthis.setTableResponse(response);\n\n\t\t\tconst history = (\n\t\t\t\tthis.getView(+
)?.getModel(\"requestHistory\") as JSONModel\n\t\t\t).getProperty(\"/\") as RequestHistory[];\n\n\t\t\thistory.push({\n\t\t\t\tmethod: \"READ\",\n\t\t\t\tentity: this.localData.selectedEntityName,\n\t\t\t\ttimestamp: new Date().toISOString(),\n\t\t\t\tst+
atusCode: 200,\n\t\t\t\tresponse: this.localData.response,\n\t\t\t});\n\n\t\t\t(this.getView()?.getModel(\"requestHistory\") as JSONModel).setProperty(\n\t\t\t\t\"/\",\n\t\t\t\thistory\n\t\t\t);\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\+
n\tprivate getResultTable() {\n\t\treturn this.getById(\"idResponseTable\") as Table;\n\t}\n\n\tprivate clearResult() {\n\t\tconst table = this.getResultTable();\n\t\ttable.removeAllColumns();\n\t\ttable.removeAllItems();\n\t\tthis.localData.response = \+
"\";\n\t}\n\n\tprivate setTableResponse(data: unknown) {\n\t\tconst table = this.getById(\"idResponseTable\") as Table;\n\n\t\tconst propertiesMerged = {\n\t\t\t...this.localData.selectedEntityProperties.properties,\n\t\t\t...this.localData.selectedEntit+
yProperties.keyProperties,\n\t\t};\n\t\tconst properties: { name: string; isKey: boolean }[] = [];\n\t\t// fill properties with name and isKey flag\n\t\tconst keys = Object.keys(propertiesMerged);\n\t\tfor (const key of keys) {\n\t\t\tproperties.push({\n+
\t\t\t\tname: propertiesMerged[key].name,\n\t\t\t\tisKey: this.localData.selectedEntityProperties.keyProperties.some(\n\t\t\t\t\t(keyProp) => keyProp.name === propertiesMerged[key].name\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\t// Handle different data format+
s\n\t\tlet items: Record<string, unknown>[] = [];\n\t\tif (Array.isArray(data)) {\n\t\t\titems = data as Record<string, unknown>[];\n\t\t} else if (data && typeof data === \"object\") {\n\t\t\tconst dataObj = data as Record<string, unknown>;\n\t\t\tif (\+
"results\" in dataObj && Array.isArray(dataObj.results)) {\n\t\t\t\titems = dataObj.results as Record<string, unknown>[];\n\t\t\t} else {\n\t\t\t\titems = [dataObj];\n\t\t\t}\n\t\t}\n\n\t\tif (items.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Create +
columns with calculated widths\n\n\t\tfor (const property of properties) {\n\t\t\t// Calculate header text length\n\t\t\tconst headerText = property.name;\n\t\t\tlet maxLength = headerText.length;\n\n\t\t\t// Find longest value in this column\n\t\t\titem+
s.forEach((item) => {\n\t\t\t\tconst value = item[property.name];\n\t\t\t\tlet displayValue = \"\";\n\t\t\t\tif (value !== null && value !== undefined) {\n\t\t\t\t\tif (typeof value === \"object\") {\n\t\t\t\t\t\tdisplayValue = JSON.stringify(value, null+
, 2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisplayValue = String(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmaxLength = Math.max(maxLength, displayValue.length);\n\t\t\t});\n\n\t\t\t// Calculate width based on content\n\t\t\t// 8px per character for monospace +
font\n\t\t\t// Add 16px padding (8px on each side)\n\t\t\tconst columnWidth = maxLength * 10 + 16;\n\n\t\t\t// Create header with optional key icon\n\t\t\tconst headerContent = new VBox({\n\t\t\t\titems: [\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\titems: [\n\t\+
t\t\t\t\t\tproperty.isKey\n\t\t\t\t\t\t\t\t? new Icon({\n\t\t\t\t\t\t\t\t\t\tsrc: \"sap-icon://key\",\n\t\t\t\t\t\t\t\t  }).addStyleClass(\"sapUiTinyMarginEnd\")\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tnew Text({ text: headerText }),\n\t\t\t\t\t\t].filte+
r(Boolean),\n\t\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t});\n\n\t\t\ttable.addColumn(\n\t\t\t\tnew Column({\n\t\t\t\t\theader: headerContent,\n\t\t\t\t\twidth: `${columnWidth}px`,\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tfor (const +
item of items) {\n\t\t\tconst cells = properties.map((property) => {\n\t\t\t\tconst value = item[property.name];\n\t\t\t\tlet displayValue = \"\";\n\t\t\t\tif (value !== null && value !== undefined) {\n\t\t\t\t\tif (typeof value === \"object\") {\n\t\t\t+
\t\t\tdisplayValue = JSON.stringify(value, null, 2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisplayValue = String(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn new Text({ text: displayValue });\n\t\t\t});\n\n\t\t\ttable.addItem(\n\t\t\t\tnew ColumnListItem({+
\n\t\t\t\t\tcells: cells,\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * ODATA: Execute function\n\t */\n\tprivate async execFunctionRequest() {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tconst fn = (\n\t\t\t\tthis.getView().getModel(\"selectedFunction+
\") as JSONModel\n\t\t\t).getProperty(\"/\") as MetadataFunction;\n\t\t\tconst parameters = this.getFunctionParameterValues();\n\n\t\t\tconst response = await this.odataClient?.executeFunction({\n\t\t\t\tfunctionName: fn.name,\n\t\t\t\tparameters: parame+
ters,\n\t\t\t\tmethod: fn.method,\n\t\t\t});\n\n\t\t\tthis.localData.response = JSON.stringify(response, null, 2);\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\tprivate resetFilters() {\n\t\t(this.getView()?.getModel(\"entityFilters\") as+
 JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\t[]\n\t\t);\n\t}\n\n\tprivate resetSorting() {\n\t\t(this.getView()?.getModel(\"entitySorting\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\t[]\n\t\t);\n\t}\n\n\tprivate async handleAddFilter() {\n\t\tcons+
t entity = this.selectedService.entities.find(\n\t\t\t(e) => e.name === this.localData.selectedEntityName\n\t\t);\n\t\tif (!entity) {\n\t\t\tMessageBox.error(this.component.getText(\"msg.entityNotFound\"));\n\t\t\treturn;\n\t\t}\n\t\tconst filter = await+
 this.component.dialogManager.addFilter(\n\t\t\tentity.properties\n\t\t);\n\t\tconst filters = (\n\t\t\tthis.getView().getModel(\"entityFilters\") as JSONModel\n\t\t).getProperty(\"/\") as FilterRecord[];\n\n\t\tconst conflict = filters.find(\n\t\t\t(f) +
=>\n\t\t\t\tf.property === filter.property &&\n\t\t\t\tf.operator === filter.operator &&\n\t\t\t\tf.value === filter.value\n\t\t);\n\t\tif (conflict) {\n\t\t\tMessageBox.error(this.component.getText(\"msg.filterConflict\"));\n\t\t\treturn;\n\t\t}\n\n\t\t+
filters.push(filter);\n\t\t(this.getView()?.getModel(\"entityFilters\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\tfilters\n\t\t);\n\t}\n\n\tprivate async handleAddHeader() {\n\t\tconst header = await this.component.dialogManager.showAddHeaderDialog+
();\n\t\tconst headers = (\n\t\t\tthis.getView()?.getModel(\"requestHeaders\") as JSONModel\n\t\t).getProperty(\"/\") as RequestHeader[];\n\t\tconst existingHeader = headers.find((h) => h.key === header.key);\n\t\tif (existingHeader) {\n\t\t\tMessageBox.+
error(\n\t\t\t\tthis.component.getText(\"msg.headerExists\", [header.key])\n\t\t\t);\n\t\t} else {\n\t\t\theaders.push({\n\t\t\t\tkey: header.key,\n\t\t\t\tvalue: header.value,\n\t\t\t});\n\t\t\t(this.getView()?.getModel(\"requestHeaders\") as JSONModel)+
.setProperty(\n\t\t\t\t\"/\",\n\t\t\t\theaders\n\t\t\t);\n\t\t}\n\t}\n\n\tonEditHeader(event: Button$PressEvent) {\n\t\tconst binding = event.getSource().getBindingContext(\"requestHeaders\") as Context;\n\t\tconst headers = (\n\t\t\tthis.getView()?.getM+
odel(\"requestHeaders\") as JSONModel\n\t\t).getProperty(\"/\") as RequestHeader[];\n\t\tconst obj = binding.getObject() as { key: string; value: string };\n\n\t\tconst submit = () => {\n\t\t\tif (valueInput.getValue() === \"\") {\n\t\t\t\tMessageToast.s+
how(this.component.getText(\"msg.enterValue\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst index = headers.findIndex((header) => header.key === obj.key);\n\t\t\tif (index > -1) {\n\t\t\t\theaders[index].value = valueInput.getValue();\n\t\t\t\t(this.getView(+
)?.getModel(\"requestHeaders\") as JSONModel).setProperty(\n\t\t\t\t\t\"/\",\n\t\t\t\t\theaders\n\t\t\t\t);\n\t\t\t}\n\t\t\tdialog.close();\n\t\t\tdialog.destroy();\n\t\t};\n\t\tconst valueInput = new Input({\n\t\t\tvalue: obj.value,\n\t\t\tsubmit: submi+
t,\n\t\t});\n\t\tconst dialog = new Dialog({\n\t\t\ttitle: \"Edit Value of \" + obj.key,\n\t\t\tcontentWidth: \"400px\",\n\t\t\tcontent: [\n\t\t\t\tnew VBox({\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Label({ text: \"Value\" }),\n\t\t\t\t\t\tvalueInput.addSty+
leClass(\"sapUiSmallMarginBottom\"),\n\t\t\t\t\t],\n\t\t\t\t}).addStyleClass(\"sapUiSmallMargin\"),\n\t\t\t],\n\t\t});\n\t\tdialog.setBeginButton(\n\t\t\tnew Button({\n\t\t\t\ttext: \"Save\",\n\t\t\t\tpress: submit,\n\t\t\t\ttype: \"Emphasized\",\n\t\t\t+
\ticon: \"sap-icon://accept\",\n\t\t\t})\n\t\t);\n\t\tdialog.setEndButton(\n\t\t\t\n\t\t\tnew Button({\n\t\t\t\ttext: \"Cancel\",\n\t\t\t\tpress: () => {\n\t\t\t\t\tdialog.close();\n\t\t\t\t\tdialog.destroy();\n\t\t\t\t},\n\t\t\t\ttype: \"Ghost\",\n\t\t\+
t\ticon: \"sap-icon://decline\",\n\t\t\t})\n\t\t);\n\t\tdialog.open();\n\t\tvalueInput.selectText(0, obj.value.length);\n\t}\n\n\tonDeleteHeader(event: Button$PressEvent) {\n\t\tconst binding = event.getSource().getBindingContext(\"requestHeaders\") as C+
ontext;\n\t\tconst obj = binding.getObject() as { key: string; value: string };\n\t\tconst headers = (\n\t\t\tthis.getView()?.getModel(\"requestHeaders\") as JSONModel\n\t\t).getProperty(\"/\") as RequestHeader[];\n\t\tconst index = headers.findIndex((he+
ader) => header.key === obj.key);\n\t\tif (index > -1) {\n\t\t\theaders.splice(index, 1);\n\t\t}\n\t\t(this.getView()?.getModel(\"requestHeaders\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\theaders\n\t\t);\n\t}\n\n\tprivate getHeaders() {\n\t\tcons+
t headers: Record<string, string> = {};\n\t\tconst headerValues = (\n\t\t\tthis.getView()?.getModel(\"requestHeaders\") as JSONModel\n\t\t).getProperty(\"/\") as RequestHeader[];\n\t\theaderValues.forEach((header) => {\n\t\t\theaders[header.key] = header+
.value;\n\t\t});\n\t\treturn headers;\n\t}\n\n\tonSourceCopy() {\n\t\tvoid this.handleCopy();\n\t}\n\n\tonSourceDownload() {\n\t\tconst response = this.localData.response;\n\t\tif (response) {\n\t\t\tUtil.download(response, \"response.json\");\n\t\t} els+
e {\n\t\t\tMessageToast.show(this.component.getText(\"msg.noResponseToDownload\"));\n\t\t}\n\t}\n\n\tprivate async handleCopy() {\n\t\tconst response = this.localData.response;\n\t\tif (response) {\n\t\t\tawait Util.copy2Clipboard(response);\n\t\t\tMessa+
geToast.show(this.component.getText(\"msg.responseCopied\"));\n\t\t} else {\n\t\t\tMessageToast.show(this.component.getText(\"msg.noResponseToCopy\"));\n\t\t}\n\t}\n\n\tprivate values: Record<string, string | number | boolean> = {};\n\tpublic onInputProp+
ertyChange(event: Input$ChangeEvent): void {\n\t\tconst source = event.getSource();\n\t\tconst propertyName = source.getName();\n\t\tconst value = source.getValue();\n\t\tthis.values[propertyName] = value;\n\t}\n\n\tprivate getById(id: string): Control |+
 undefined {\n\t\tconst fragmentId = this.fragmentId;\n\t\tconst globalId = `${fragmentId}--${id}`;\n\n\t\tconst control = Core.byId(globalId);\n\t\treturn control as Control;\n\t}\n\n\tprivate getFunctionParameterValues() {\n\t\tconst parametersVbox = t+
his.getById(\"idParametersVBox\") as VBox;\n\t\tconst parameterInputs = Util.getAllInputValues(parametersVbox);\n\t\treturn parameterInputs;\n\t}\n\n\tprivate getEntityPropertyValues() {\n\t\tconst propertiesVbox = this.getById(\"idPropertiesVBox\") as V+
Box;\n\t\tconst keyPropertiesVbox = this.getById(\"idKeyPropertiesVBox\") as VBox;\n\t\tconst propertyInputs = Util.getAllInputValues(propertiesVbox);\n\t\tconst keyPropertyInputs = Util.getAllInputValues(keyPropertiesVbox);\n\n\t\treturn {\n\t\t\tproper+
ties: propertyInputs,\n\t\t\tkeyProperties: keyPropertyInputs,\n\t\t};\n\t}\n\n\tprivate resetEntityInputs() {\n\t\tconst propertiesVbox = this.getById(\"idPropertiesVBox\") as VBox;\n\t\tconst keyPropertiesVbox = this.getById(\"idKeyPropertiesVBox\") as+
 VBox;\n\t\tUtil.resetInputs(propertiesVbox);\n\t\tUtil.resetInputs(keyPropertiesVbox);\n\t}\n\n\tprivate resetFunctionInputs() {\n\t\tconst parametersVbox = this.getById(\"idParametersVBox\") as VBox;\n\t\tUtil.resetInputs(parametersVbox);\n\t}\n\n\t/**+
\n\t * Filter: delete filter configuration\n\t */\n\tonButtonFilterDeletePress(event: Button$PressEvent) {\n\t\tconst binding = event.getSource().getBindingContext(\"entityFilters\") as Context;\n\t\tconst obj = binding.getObject() as FilterRecord;\n\t\t+
void this.handleButtonFilterDeletePress(obj);\n\t}\n\n\t/**\n\t * Filter: edit filter configuration\n\t */\n\tonButtonFilterEditPress(event: Button$PressEvent) {\n\t\tconst binding = event.getSource().getBindingContext(\"entityFilters\") as Context;\n\t\+
tconst obj = binding.getObject() as FilterRecord;\n\t\tvoid this.handleButtonFilterEditPress(obj);\n\t}\n\n\t/**\n\t * Filter: delete filter configuration\n\t */\n\tprivate handleButtonFilterDeletePress(obj: FilterRecord) {\n\t\tconst filters = (\n\t\t\t+
this.getView()?.getModel(\"entityFilters\") as JSONModel\n\t\t).getProperty(\"/\") as FilterRecord[];\n\t\tconst filteredList = filters.filter(\n\t\t\t(filter) =>\n\t\t\t\tfilter.property !== obj.property &&\n\t\t\t\tfilter.operator !== obj.operator &&\n+
\t\t\t\tfilter.value !== obj.value\n\t\t);\n\t\t(this.getView()?.getModel(\"entityFilters\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\tfilteredList\n\t\t);\n\t}\n\n\t/**\n\t * Filter: edit filter configuration\n\t */\n\tprivate async handleButtonFi+
lterEditPress(obj: FilterRecord) {\n\t\tconst entity = this.selectedService.entities.find(\n\t\t\t(e) => e.name === this.localData.selectedEntityName\n\t\t);\n\t\tif (!entity) {\n\t\t\tMessageBox.error(\"Entity not found\");\n\t\t\treturn;\n\t\t}\n\t\tco+
nst filters = (\n\t\t\tthis.getView()?.getModel(\"entityFilters\") as JSONModel\n\t\t).getProperty(\"/\") as FilterRecord[];\n\t\tconst index = filters.findIndex(\n\t\t\t(f) =>\n\t\t\t\tf.property === obj.property &&\n\t\t\t\tf.operator === obj.operator +
&&\n\t\t\t\tf.value === obj.value\n\t\t);\n\t\tconst updated = await this.component.dialogManager.editFilter(\n\t\t\tobj,\n\t\t\tentity.properties\n\t\t);\n\n\t\tconst conflict = filters.find(\n\t\t\t(f) =>\n\t\t\t\tf.property === updated.property &&\n\t+
\t\t\tf.operator === updated.operator &&\n\t\t\t\tf.value === updated.value\n\t\t);\n\t\tif (conflict) {\n\t\t\tMessageBox.error(\"Conflict with existing record\");\n\t\t\treturn;\n\t\t}\n\n\t\tfilters[index] = updated;\n\t\t(this.getView().getModel(\"en+
tityFilters\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\tfilters\n\t\t);\n\t}\n\n\tonButtonViewResponsePress(event: Button$PressEvent) {\n\t\tconst binding = event.getSource().getBindingContext(\"requestHistory\") as Context;\n\t\tconst historyItem+
 = binding.getObject() as RequestHistory;\n\t\tthis.localData.response = historyItem.response;\n\t}\n\n\t/**\n\t * Sorter: add sort configuration\n\t */\n\tprivate async handleAddSort() {\n\t\tconst entity = this.selectedService.entities.find(\n\t\t\t(e)+
 => e.name === this.localData.selectedEntityName\n\t\t);\n\t\tif (!entity) {\n\t\t\tMessageBox.error(\"Entity not found\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst sort = await this.component.dialogManager.addSort(entity.properties);\n\n\t\tconst sorting = (\+
n\t\t\tthis.getView()?.getModel(\"entitySorting\") as JSONModel\n\t\t).getProperty(\"/\") as { property: string; direction: \"asc\" | \"desc\" }[];\n\n\t\tconst conflict = sorting.find((s) => s.property === sort.property);\n\t\tif (conflict) {\n\t\t\tMes+
sageBox.error(this.component.getText(\"msg.propertyAlreadySorted\"));\n\t\t\treturn;\n\t\t}\n\n\t\tsorting.push(sort);\n\t\t(this.getView()?.getModel(\"entitySorting\") as JSONModel).setProperty(\n\t\t\t\"/\",\n\t\t\tsorting\n\t\t);\n\t}\n\n\t/**\n\t * S+
orter: delete sort configuration\n\t */\n\tprivate handleButtonSortDeletePress(obj: {\n\t\tproperty: string;\n\t\tdirection: \"asc\" | \"desc\";\n\t}) {\n\t\tconst sorting = (\n\t\t\tthis.getView()?.getModel(\"entitySorting\") as JSONModel\n\t\t).getProp+
erty(\"/\") as { property: string; direction: \"asc\" | \"desc\" }[];\n\t\tconst filteredList = sorting.filter(\n\t\t\t(sort) => sort.property !== obj.property\n\t\t);\n\t\t(this.getView()?.getModel(\"entitySorting\") as JSONModel).setProperty(\n\t\t\t\"+
/\",\n\t\t\tfilteredList\n\t\t);\n\t}\n\n\t/**\n\t * Project: save configuration to server\n\t */\n\tprivate async handleSaveConfiguration() {\n\t\tthis.setBusy(true);\n\t\ttry {\n\t\t\tconst projectName =\n\t\t\t\tawait this.component.dialogManager.show+
SaveProjectDialog();\n\t\t\tconst localData = (\n\t\t\t\tthis.getView()?.getModel(\"local\") as JSONModel\n\t\t\t).getProperty(\"/\") as MainViewModel;\n\t\t\tconst filters = (\n\t\t\t\tthis.getView()?.getModel(\"entityFilters\") as JSONModel\n\t\t\t).ge+
tProperty(\"/\") as FilterRecord[];\n\t\t\tconst headers = (\n\t\t\t\tthis.getView()?.getModel(\"requestHeaders\") as JSONModel\n\t\t\t).getProperty(\"/\") as RequestHeader[];\n\t\t\tconst sorters = (\n\t\t\t\tthis.getView()?.getModel(\"entitySorting\") +
as JSONModel\n\t\t\t).getProperty(\"/\") as { property: string; direction: \"asc\" | \"desc\" }[];\n\t\t\tconst selectedService = (\n\t\t\t\tthis.getView()?.getModel(\"selectedService\") as JSONModel\n\t\t\t).getProperty(\"/\") as SelectedServiceModel;\n+
\n\t\t\tconst project = {\n\t\t\t\tProjectName: projectName,\n\t\t\t\tOdatatype: selectedService.service.ODataType,\n\t\t\t\tServiceName: selectedService.service.ServiceName,\n\t\t\t\tServicePath: selectedService.service.ServicePath,\n\t\t\t\tServiceVers+
ion: selectedService.service.Version,\n\t\t\t\tEntityMethod: localData.selectedMethod,\n\t\t\t\tEntityName: localData.selectedEntityName,\n\t\t\t\tFunctionName: localData.selectedFunctionName,\n\t\t\t\tActionName: \"\",\n\t\t\t\tRequestType: localData.re+
sourceType,\n\t\t\t\tTop: localData.top ?? 0,\n\t\t\t\tSkip: localData.skip ?? 0,\n\t\t\t\tHeaders: JSON.stringify(headers),\n\t\t\t\tFilters: JSON.stringify(filters),\n\t\t\t\tSorters: JSON.stringify(sorters),\n\t\t\t} as Project;\n\n\t\t\tawait this.co+
mponent.requests.createProject(project);\n\t\t\tMessageToast.show(this.component.getText(\"msg.configurationSaved\"));\n\t\t} finally {\n\t\t\tthis.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Project: load configuration from server\n\t */\n\tprivate async+
 handleLoadConfiguration() {\n\t\ttry {\n\t\t\tconst selectedProject =\n\t\t\t\tawait this.component.dialogManager.showProjectListDialog();\n\n\t\t\tif (selectedProject) {\n\t\t\t\tconst localData = (\n\t\t\t\t\tthis.getView()?.getModel(\"local\") as JSO+
NModel\n\t\t\t\t).getProperty(\"/\") as MainViewModel;\n\n\t\t\t\tconst service = {\n\t\t\t\t\tServiceName: selectedProject.ServiceName,\n\t\t\t\t\tODataType: selectedProject.Odatatype,\n\t\t\t\t\tServicePath: selectedProject.ServicePath,\n\t\t\t\t\tVers+
ion: selectedProject.ServiceVersion,\n\t\t\t\t} as ServiceEntity;\n\n\t\t\t\tawait this.loadService(service);\n\n\t\t\t\tlocalData.resourceType = selectedProject.RequestType;\n\t\t\t\tlocalData.selectedEntityName = selectedProject.EntityName;\n\t\t\t\tlo+
calData.selectedFunctionName = selectedProject.FunctionName;\n\t\t\t\t//this.localData.selectedActionName = selectedProject.ActionName;\n\t\t\t\tlocalData.selectedMethod = selectedProject.EntityMethod;\n\t\t\t\tlocalData.top = selectedProject.Top\n\t\t\t+
\t\t? selectedProject.Top\n\t\t\t\t\t: 10;\n\t\t\t\tlocalData.skip = selectedProject.Skip\n\t\t\t\t\t? selectedProject.Skip\n\t\t\t\t\t: 0;\n\n\t\t\t\t(this.getView()?.getModel(\"local\") as JSONModel).setProperty(\n\t\t\t\t\t\"/\",\n\t\t\t\t\tlocalData\+
n\t\t\t\t);\n\t\t\t\t(this.getView()?.getModel(\"entityFilters\") as JSONModel).setProperty(\n\t\t\t\t\t\"/\",\n\t\t\t\t\tJSON.parse(selectedProject.Filters) as FilterRecord[]\n\t\t\t\t);\n\t\t\t\t(this.getView()?.getModel(\"entitySorting\") as JSONModel+
).setProperty(\n\t\t\t\t\t\"/\",\n\t\t\t\t\tJSON.parse(selectedProject.Sorters)\n\t\t\t\t);\n\t\t\t\t(this.getView()?.getModel(\"requestHeaders\") as JSONModel).setProperty(\n\t\t\t\t\t\"/\",\n\t\t\t\t\tJSON.parse(selectedProject.Headers)\n\t\t\t\t);\n\n+
\t\t\t\tMessageToast.show(this.component.getText(\"msg.configurationLoaded\"));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error instanceof Error && error.message !== \"Dialog closed\") {\n\t\t\t\tMessageBox.error(`Error loading configuration: ${error.me+
ssage}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setTitle(title: string) {\n\t\tthrow new Error(\"Not implemented: \" + title);\n\t}\n}\n"],"mappings":"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","igno+
reList":[]}                                                                                                                                                                                                                                                    