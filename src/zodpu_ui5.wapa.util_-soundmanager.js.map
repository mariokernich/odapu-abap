{"version":3,"file":"SoundManager.js","names":["SoundManager","static","initialize","this","isInitialized","errorAudio","Audio","sap","ui","require","toUrl","preload","load","successAudio","error","FireError","currentTime","play","FireSuccess","isAudioSu+
pported"],"sources":["SoundManager.ts"],"sourcesContent":["/**\n * @namespace de.kernich.odpu.util\n */\nexport default class SoundManager {\n\tprivate static errorAudio: HTMLAudioElement | null = null;\n\tprivate static successAudio: HTMLAudioElement | +
null = null;\n\tprivate static isInitialized: boolean = false;\n\n\t/**\n\t * Initialize and preload audio files\n\t */\n\tpublic static initialize(): void {\n\t\tif (this.isInitialized) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t// Preload error audio\+
n\t\t\tthis.errorAudio = new Audio(sap.ui.require.toUrl(\"de/kernich/odpu/sounds/error.mp3\"));\n\t\t\tthis.errorAudio.preload = \"auto\";\n\t\t\tthis.errorAudio.load();\n\n\t\t\t// Preload success audio\n\t\t\tthis.successAudio = new Audio(sap.ui.requir+
e.toUrl(\"de/kernich/odpu/sounds/success.mp3\"));\n\t\t\tthis.successAudio.preload = \"auto\";\n\t\t\tthis.successAudio.load();\n\n\t\t\tthis.isInitialized = true;\n\t\t\tconsole.log(\"SoundManager: Audio files preloaded successfully\");\n\t\t} catch (er+
ror) {\n\t\t\tconsole.warn(\"SoundManager: Could not preload audio files:\", error);\n\t\t}\n\t}\n\n\t/**\n\t * Play error sound\n\t */\n\tpublic static async FireError(): Promise<void> {\n\t\ttry {\n\t\t\tif (!this.isInitialized) {\n\t\t\t\tthis.initial+
ize();\n\t\t\t}\n\t\t\t\n\t\t\tif (this.errorAudio) {\n\t\t\t\t// Reset to beginning in case it was already played\n\t\t\t\tthis.errorAudio.currentTime = 0;\n\t\t\t\tawait this.errorAudio.play();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.warn(\"Coul+
d not play error sound:\", error);\n\t\t}\n\t}\n\n\t/**\n\t * Play success sound\n\t */\n\tpublic static async FireSuccess(): Promise<void> {\n\t\ttry {\n\t\t\tif (!this.isInitialized) {\n\t\t\t\tthis.initialize();\n\t\t\t}\n\t\t\t\n\t\t\tif (this.succes+
sAudio) {\n\t\t\t\t// Reset to beginning in case it was already played\n\t\t\t\tthis.successAudio.currentTime = 0;\n\t\t\t\tawait this.successAudio.play();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.warn(\"Could not play success sound:\", error);\n\t+
\t}\n\t}\n\n\t/**\n\t * Check if audio is supported and initialized\n\t */\n\tpublic static isAudioSupported(): boolean {\n\t\treturn typeof Audio !== 'undefined' && this.isInitialized;\n\t}\n} "],"mappings":"yCAGe,MAAMA,EACpBC,kBAAqD,KACrDA,oBAAuD,KACvD+
A,qBAAwC,MAKxC,iBAAcC,GACb,GAAIC,KAAKC,cAAe,CACvB,MACD,CAEA,IAECD,KAAKE,WAAa,IAAIC,MAAMC,IAAIC,GAAGC,QAAQC,MAAM,qCACjDP,KAAKE,WAAWM,QAAU,OAC1BR,KAAKE,WAAWO,OAGhBT,KAAKU,aAAe,IAAIP,MAAMC,IAAIC,GAAGC,QAAQC,MAAM,uCACnDP,KAAKU,aAAaF,QAAU,OAC5BR,KAAKU,aAAaD,O+
AElBT,KAAKC,cAAgB,IAEtB,CAAE,MAAOU,GAET,CACD,CAKA,sBAAoBC,GACnB,IACC,IAAKZ,KAAKC,cAAe,CACxBD,KAAKD,YACN,CAEA,GAAIC,KAAKE,WAAY,CAEpBF,KAAKE,WAAWW,YAAc,QACxBb,KAAKE,WAAWY,MACvB,CACD,CAAE,MAAOH,GAET,CACD,CAKA,wBAAoBI,GACnB,IACC,IAAKf,KAAKC,cAAe,CACxBD,KAAKD+
,YACN,CAEA,GAAIC,KAAKU,aAAc,CAEtBV,KAAKU,aAAaG,YAAc,QAC1Bb,KAAKU,aAAaI,MACzB,CACD,CAAE,MAAOH,GAET,CACD,CAKA,uBAAcK,GACb,cAAcb,QAAU,aAAeH,KAAKC,aAC7C,EACA,OAAAJ,CAAA","ignoreList":[]}                                                                         