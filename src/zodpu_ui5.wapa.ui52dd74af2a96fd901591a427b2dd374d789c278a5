{"version":3,"file":"SoundManager-dbg.js","names":["SoundManager","errorAudio","successAudio","isInitialized","initialize","Audio","sap","ui","require","toUrl","preload","load","error","FireError","currentTime","play","FireSuccess","isAudioSupported"],"s+
ources":["SoundManager.ts"],"sourcesContent":["/**\n * @namespace de.kernich.odpu.util\n */\nexport default class SoundManager {\n\tprivate static errorAudio: HTMLAudioElement | null = null;\n\tprivate static successAudio: HTMLAudioElement | null = null;+
\n\tprivate static isInitialized: boolean = false;\n\n\t/**\n\t * Initialize and preload audio files\n\t */\n\tpublic static initialize(): void {\n\t\tif (this.isInitialized) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t// Preload error audio\n\t\t\tthis.+
errorAudio = new Audio(sap.ui.require.toUrl(\"de/kernich/odpu/sounds/error.mp3\"));\n\t\t\tthis.errorAudio.preload = \"auto\";\n\t\t\tthis.errorAudio.load();\n\n\t\t\t// Preload success audio\n\t\t\tthis.successAudio = new Audio(sap.ui.require.toUrl(\"de+
/kernich/odpu/sounds/success.mp3\"));\n\t\t\tthis.successAudio.preload = \"auto\";\n\t\t\tthis.successAudio.load();\n\n\t\t\tthis.isInitialized = true;\n\t\t\tconsole.log(\"SoundManager: Audio files preloaded successfully\");\n\t\t} catch (error) {\n\t\t+
\tconsole.warn(\"SoundManager: Could not preload audio files:\", error);\n\t\t}\n\t}\n\n\t/**\n\t * Play error sound\n\t */\n\tpublic static async FireError(): Promise<void> {\n\t\ttry {\n\t\t\tif (!this.isInitialized) {\n\t\t\t\tthis.initialize();\n\t\t+
\t}\n\t\t\t\n\t\t\tif (this.errorAudio) {\n\t\t\t\t// Reset to beginning in case it was already played\n\t\t\t\tthis.errorAudio.currentTime = 0;\n\t\t\t\tawait this.errorAudio.play();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.warn(\"Could not play e+
rror sound:\", error);\n\t\t}\n\t}\n\n\t/**\n\t * Play success sound\n\t */\n\tpublic static async FireSuccess(): Promise<void> {\n\t\ttry {\n\t\t\tif (!this.isInitialized) {\n\t\t\t\tthis.initialize();\n\t\t\t}\n\t\t\t\n\t\t\tif (this.successAudio) {\n\+
t\t\t\t// Reset to beginning in case it was already played\n\t\t\t\tthis.successAudio.currentTime = 0;\n\t\t\t\tawait this.successAudio.play();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.warn(\"Could not play success sound:\", error);\n\t\t}\n\t}\n\n+
\t/**\n\t * Check if audio is supported and initialized\n\t */\n\tpublic static isAudioSupported(): boolean {\n\t\treturn typeof Audio !== 'undefined' && this.isInitialized;\n\t}\n} "],"mappings":";;;EAAA;AACA;AACA;EACe,MAAMA,YAAY,CAAC;IACjC,OAAeC,UAAU,G+
AA4B,IAAI;IACzD,OAAeC,YAAY,GAA4B,IAAI;IAC3D,OAAeC,aAAa,GAAY,KAAK;;IAE7C;AACD;AACA;IACC,OAAcC,UAAUA,CAAA,EAAS;MAChC,IAAI,IAAI,CAACD,aAAa,EAAE;QACvB;MACD;MAEA,IAAI;QACH;QACA,IAAI,CAACF,UAAU,GAAG,IAAII,KAAK,CAACC,GAAG,CAACC,EAAE,CAACC,OAAO,CAACC,KAAK,CAAC,k+
CAAkC,CAAC,CAAC;QACrF,IAAI,CAACR,UAAU,CAACS,OAAO,GAAG,MAAM;QAChC,IAAI,CAACT,UAAU,CAACU,IAAI,CAAC,CAAC;;QAEtB;QACA,IAAI,CAACT,YAAY,GAAG,IAAIG,KAAK,CAACC,GAAG,CAACC,EAAE,CAACC,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC,CAAC;QACzF,IAAI,CAACP,YAAY,CAACQ,OAAO,GAAG,MAAM+
;QAClC,IAAI,CAACR,YAAY,CAACS,IAAI,CAAC,CAAC;QAExB,IAAI,CAACR,aAAa,GAAG,IAAI;MAE1B,CAAC,CAAC,OAAOS,KAAK,EAAE,CAEhB;IACD;;IAEA;AACD;AACA;IACC,aAAoBC,SAASA,CAAA,EAAkB;MAC9C,IAAI;QACH,IAAI,CAAC,IAAI,CAACV,aAAa,EAAE;UACxB,IAAI,CAACC,UAAU,CAAC,CAAC;QAClB;QAEA,+
IAAI,IAAI,CAACH,UAAU,EAAE;UACpB;UACA,IAAI,CAACA,UAAU,CAACa,WAAW,GAAG,CAAC;UAC/B,MAAM,IAAI,CAACb,UAAU,CAACc,IAAI,CAAC,CAAC;QAC7B;MACD,CAAC,CAAC,OAAOH,KAAK,EAAE,CAEhB;IACD;;IAEA;AACD;AACA;IACC,aAAoBI,WAAWA,CAAA,EAAkB;MAChD,IAAI;QACH,IAAI,CAAC,IAAI,CAACb,aA+
Aa,EAAE;UACxB,IAAI,CAACC,UAAU,CAAC,CAAC;QAClB;QAEA,IAAI,IAAI,CAACF,YAAY,EAAE;UACtB;UACA,IAAI,CAACA,YAAY,CAACY,WAAW,GAAG,CAAC;UACjC,MAAM,IAAI,CAACZ,YAAY,CAACa,IAAI,CAAC,CAAC;QAC/B;MACD,CAAC,CAAC,OAAOH,KAAK,EAAE,CAEhB;IACD;;IAEA;AACD;AACA;IACC,OAAcK,gBAAgB+
A,CAAA,EAAY;MACzC,OAAO,OAAOZ,KAAK,KAAK,WAAW,IAAI,IAAI,CAACF,aAAa;IAC1D;EACD;EAAC,OAAAH,YAAA;AAAA","ignoreList":[]}                                                                                                                                             