{"version":3,"file":"PickServiceDialogController.js","names":["DialogController","_interopRequireDefault","__DialogController","PickServiceDialogController","extend","constructor","prototype","apply","this","arguments","data","services","odataTypes","key+
","text","searchQuery","selectedODataType","selectedService","onSearch","_onSearch","event","query","getParameter","toLowerCase","table","getElement","binding","getBinding","filter","Filter","filters","FilterOperator","Contains","and","filteredLength","g+
etLength","dialog","setTitle","onODataTypeChange","_onODataTypeChange","selectedKey","getKey","applyFilters","onRefresh","_onRefresh","handleRefresh","async","_handleRefresh","model","getModel","requests","getServices","setProperty","MessageToast","show"+
,"getText","onChoose","_onChoose","selectedItem","getSelectedItem","bindingContext","getBindingContext","service","getObject","onConfirm","onCustomService","_onCustomService","dialogManager","pickCustomService","_applyFilters","push","EQ","length","onFav+
orite","_onFavorite","isFavorite","getSource","handleFavorite","_handleFavorite","setBusy","markAsFavorite","servicePath","ServicePath"],"sources":["PickServiceDialogController.ts"],"sourcesContent":["import DialogController from \"../../util/DialogContr+
oller\";\nimport { ServiceEntity } from \"../../Types\";\nimport { SearchField$LiveChangeEvent } from \"sap/m/SearchField\";\nimport { Select$ChangeEvent } from \"sap/m/Select\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"+
sap/ui/model/FilterOperator\";\nimport ListBinding from \"sap/ui/model/ListBinding\";\nimport Table from \"sap/m/Table\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport Context from \"sap/ui/model/odata/v2/Context\";\nimport JSONModel from \"s+
ap/ui/model/json/JSONModel\";\nimport { Button$PressEvent } from \"sap/m/Button\";\n\n/**\n * @namespace de.kernich.odpu.controller.dialog\n */\nexport default class PickServiceDialogController extends DialogController {\n\tdata = {\n\t\tservices: [] as +
ServiceEntity[],\n\t\todataTypes: [\n\t\t\t{ key: \"ALL\", text: \"All\" },\n\t\t\t{ key: \"2\", text: \"2\" },\n\t\t\t{ key: \"4\", text: \"4\" },\n\t\t],\n\t\tsearchQuery: \"\",\n\t\tselectedODataType: \"ALL\",\n\t\tselectedService: null as ServiceEnti+
ty | null,\n\t};\n\n\tonSearch(event: SearchField$LiveChangeEvent) {\n\t\tconst query = event.getParameter(\"newValue\")?.toLowerCase() ?? \"\";\n\t\tconst table = this.getElement<Table>(\"idServicesTable\");\n\t\tconst binding = table.getBinding(\"items+
\") as ListBinding;\n\n\t\tbinding.filter(\n\t\t\tquery\n\t\t\t\t? new Filter({\n\t\t\t\t\t\tfilters: [\n\t\t\t\t\t\t\tnew Filter(\"ServiceName\", FilterOperator.Contains, query),\n\t\t\t\t\t\t\tnew Filter(\"ServicePath\", FilterOperator.Contains, query)+
,\n\t\t\t\t\t\t],\n\t\t\t\t\t\tand: false,\n\t\t\t\t  })\n\t\t\t\t: []\n\t\t);\n\n\t\tconst filteredLength = binding ? binding.getLength() : 0;\n\t\tthis.dialog.setTitle(`Select Service (${filteredLength})`);\n\t}\n\n\tonODataTypeChange(event: Select$Cha+
ngeEvent) {\n\t\tconst selectedKey = event.getParameter(\"selectedItem\")?.getKey() ?? \"ALL\";\n\t\tthis.data.selectedODataType = selectedKey;\n\t\tthis.applyFilters();\n\t}\n\n\tonRefresh() {\n\t\tvoid this.handleRefresh();\n\t}\n\n\tasync handleRefres+
h() {\n\t\tconst model = this.getModel(\"dialog\") as JSONModel;\n\t\tconst services = await this.requests.getServices();\n\t\tmodel.setProperty(\"/services\", services);\n\t\tMessageToast.show(this.getText(\"msg.servicesRefreshed\"));\n\t}\n\n\tonChoose+
() {\n\t\tconst table = this.getElement<Table>(\"idServicesTable\");\n\t\tconst selectedItem = table.getSelectedItem();\n\n\t\tif (!selectedItem) {\n\t\t\tMessageToast.show(this.getText(\"msg.selectService\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst bindingC+
ontext = selectedItem.getBindingContext(\"dialog\") as Context;\n\t\tconst service = bindingContext.getObject() as ServiceEntity;\n\t\tthis.data.selectedService = service;\n\t\tthis.onConfirm();\n\t}\n\n\tasync onCustomService() {\n\t\ttry {\n\t\t\tconst+
 service = await this.dialogManager.pickCustomService();\n\t\t\tthis.data.selectedService = service;\n\t\t\tthis.onConfirm();\n\t\t} catch {\n\t\t\t// Ignore error as it's handled in pickCustomService\n\t\t}\n\t}\n\n\tprivate applyFilters() {\n\t\tconst +
table = this.getElement<Table>(\"idServicesTable\");\n\t\tconst binding = table.getBinding(\"items\") as ListBinding;\n\t\tconst filters: Filter[] = [];\n\n\t\t// Add search filter if query exists\n\t\tif (this.data.searchQuery) {\n\t\t\tfilters.push(\n\+
t\t\t\tnew Filter(\n\t\t\t\t\t\"ServiceName\",\n\t\t\t\t\tFilterOperator.Contains,\n\t\t\t\t\tthis.data.searchQuery\n\t\t\t\t),\n\t\t\t\tnew Filter(\n\t\t\t\t\t\"ServicePath\",\n\t\t\t\t\tFilterOperator.Contains,\n\t\t\t\t\tthis.data.searchQuery\n\t\t\t\+
t)\n\t\t\t);\n\t\t}\n\n\t\t// Add OData type filter if not ALL\n\t\tif (this.data.selectedODataType !== \"ALL\") {\n\t\t\tfilters.push(\n\t\t\t\tnew Filter(\"ODataType\", FilterOperator.EQ, this.data.selectedODataType)\n\t\t\t);\n\t\t}\n\n\t\t// Apply co+
mbined filters\n\t\tbinding.filter(\n\t\t\tfilters.length > 0 ? new Filter({ filters: filters, and: true }) : []\n\t\t);\n\n\t\tconst filteredLength = binding ? binding.getLength() : 0;\n\t\tthis.dialog.setTitle(`Select Service (${filteredLength})`);\n\t+
}\n\n\tonFavorite(isFavorite: boolean, event: Button$PressEvent) {\n\t\tconst binding = event.getSource().getBindingContext(\"dialog\") as Context;\n\t\tconst service = binding.getObject() as ServiceEntity;\n\t\tvoid this.handleFavorite(service, isFavori+
te);\n\t}\n\n\tasync handleFavorite(service: ServiceEntity, isFavorite: boolean) {\n\t\tthis.dialog.setBusy(true);\n\t\ttry {\n\t\t\tawait this.requests.markAsFavorite({\n\t\t\t\tservicePath: service.ServicePath,\n\t\t\t\tisFavorite: isFavorite,\n\t\t\t}+
);\n\t\t\tawait this.handleRefresh();\n\t\t} finally {\n\t\t\tthis.dialog.setBusy(false);\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}                                   