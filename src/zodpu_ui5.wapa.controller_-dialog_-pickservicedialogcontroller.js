sap.ui.define(["../../util/DialogController","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/m/MessageToast"],function(e,t,i,s){"use strict";function n(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const a=n(e);const o=a.+
extend("de.kernich.odpu.controller.dialog.PickServiceDialogController",{constructor:function e(){a.prototype.constructor.apply(this,arguments);this.data={services:[],odataTypes:[{key:"ALL",text:"All"},{key:"2",text:"2"},{key:"4",text:"4"}],searchQuery:""+
,selectedODataType:"ALL",selectedService:null}},onSearch:function e(s){const n=s.getParameter("newValue")?.toLowerCase()??"";const a=this.getElement("idServicesTable");const o=a.getBinding("items");o.filter(n?new t({filters:[new t("ServiceName",i.Contain+
s,n),new t("ServicePath",i.Contains,n)],and:false}):[]);const c=o?o.getLength():0;this.dialog.setTitle(`Select Service (${c})`)},onODataTypeChange:function e(t){const i=t.getParameter("selectedItem")?.getKey()??"ALL";this.data.selectedODataType=i;this.ap+
plyFilters()},onRefresh:function e(){void this.handleRefresh()},handleRefresh:async function e(){const t=this.getModel("dialog");const i=await this.requests.getServices();t.setProperty("/services",i);s.show(this.getText("msg.servicesRefreshed"))},onChoos+
e:function e(){const t=this.getElement("idServicesTable");const i=t.getSelectedItem();if(!i){s.show(this.getText("msg.selectService"));return}const n=i.getBindingContext("dialog");const a=n.getObject();this.data.selectedService=a;this.onConfirm()},onCust+
omService:async function e(){try{const e=await this.dialogManager.pickCustomService();this.data.selectedService=e;this.onConfirm()}catch{}},applyFilters:function e(){const s=this.getElement("idServicesTable");const n=s.getBinding("items");const a=[];if(t+
his.data.searchQuery){a.push(new t("ServiceName",i.Contains,this.data.searchQuery),new t("ServicePath",i.Contains,this.data.searchQuery))}if(this.data.selectedODataType!=="ALL"){a.push(new t("ODataType",i.EQ,this.data.selectedODataType))}n.filter(a.lengt+
h>0?new t({filters:a,and:true}):[]);const o=n?n.getLength():0;this.dialog.setTitle(`Select Service (${o})`)},onFavorite:function e(t,i){const s=i.getSource().getBindingContext("dialog");const n=s.getObject();void this.handleFavorite(n,t)},handleFavorite:+
async function e(t,i){this.dialog.setBusy(true);try{await this.requests.markAsFavorite({servicePath:t.ServicePath,isFavorite:i});await this.handleRefresh()}finally{this.dialog.setBusy(false)}}});return o});                                                 
//# sourceMappingURL=PickServiceDialogController.js.map                                                                                                                                                                                                        