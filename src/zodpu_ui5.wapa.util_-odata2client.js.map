{"version":3,"file":"OData2Client.js","names":["ODataHelper","_interopRequireDefault","__ODataHelper","Util","__Util","SoundManager","__SoundManager","OData2Client","constructor","serviceUrl","this","model","ODataModelV2","attachRequestFailed","event","F+
ireError","parameters","getParameters","responseText","response","startsWith","parser","DOMParser","xmlDoc","parseFromString","messageNode","getElementsByTagName","MessageBox","error","textContent","json","JSON","parse","message","value","getActions","ge+
tComplexTypes","complexTypes","complexTypeNodes","Array","from","metadataXml","complexTypeNode","name","getAttribute","properties","map","propertyNode","type","nullable","maxLength","getMaxLength","push","filter","entity","destroy","createEntity","option+
s","setHeaders","headers","Promise","resolve","reject","create","entityName","success","FireSuccess","getEntity","keyPath","Object","entries","keys","key","join","urlParameters","expand","length","$expand","result","read","data","undefined","deleteEntity+
","path","createKey","remove","initAsync","metadataLoaded","details","getErrorMessage","metadataText","getMetadataText","parseMetadataXml","getEntities","entities","entitySets","node","Name","EntityType","entityType","includes","split","pop","entityTypeN+
ode","find","keyNode","propertyRefs","keyName","prop","property","navigationProperties","navNode","relationship","fromRole","toRole","getAssociations","associations","associationNodes","assocNode","endNodes","end","endNode","multiplicity","role","onDelet+
eAction","onDelete","refConstraintNode","referentialConstraint","principalNode","dependentNode","principal","propertyRef","pr","dependent","getMetadataXml","XMLDocument","getFunctions","functionImports","ReturnType","EntitySet","HttpMethod","Parameters",+
"paramNode","func","returnType","entitySet","method","getModel","readEntity","$top","top","toString","$skip","skip","filters","sorters","sorting","executeFunction","callFunction","functionName","executeAction","Error","stringify"],"sources":["OData2Clien+
t.ts"],"sourcesContent":["import Filter from \"sap/ui/model/Filter\";\nimport IODataClient from \"./IODataClient\";\nimport ODataModel from \"sap/ui/model/odata/ODataModel\";\nimport ODataModelV2 from \"sap/ui/model/odata/v2/ODataModel\";\nimport {\n\tMe+
tadataAction,\n\tMetadataAssociation,\n\tMetadataEntity,\n\tMetadataFunction,\n\tMetadataFunctionMethod,\n\tMetadataComplexType,\n} from \"../Types\";\nimport ODataHelper from \"./ODataHelper\";\nimport { Model$RequestFailedEvent } from \"sap/ui/model/Mo+
del\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport Util from \"./Util\";\nimport SoundManager from \"./SoundManager\";\n\n/**\n * @namespace de.kernich.odpu.util\n */\nexport default class OData2Clie+
nt implements IODataClient {\n\tprivate model: ODataModelV2;\n\tprivate serviceUrl: string;\n\tprivate metadataText?: string;\n\tprivate metadataXml?: XMLDocument;\n\n\tconstructor(serviceUrl: string) {\n\t\tthis.serviceUrl = serviceUrl;\n\t\tthis.model +
= new ODataModelV2(serviceUrl, {});\n\n\t\tthis.model.attachRequestFailed({}, (event: Model$RequestFailedEvent) => {\n\t\t\tvoid SoundManager.FireError();\n\n\t\t\tconst parameters = event.getParameters() as {\n\t\t\t\tresponse: {\n\t\t\t\t\tresponseText+
: string;\n\t\t\t\t};\n\t\t\t};\n\t\t\tconst responseText = parameters.response.responseText;\n\n\t\t\tif (responseText.startsWith(\"<?xml\")) {\n\t\t\t\t// Handle XML response\n\t\t\t\tconst parser = new DOMParser();\n\t\t\t\tconst xmlDoc = parser.parse+
FromString(responseText, \"text/xml\");\n\t\t\t\tconst messageNode = xmlDoc.getElementsByTagName(\"message\")[0];\n\t\t\t\tif (messageNode) {\n\t\t\t\t\tMessageBox.error(messageNode.textContent);\n\t\t\t\t} else {\n\t\t\t\t\tMessageBox.error(\"Unknown er+
ror occurred\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Handle JSON response\n\t\t\t\tconst json = JSON.parse(responseText) as {\n\t\t\t\t\terror: {\n\t\t\t\t\t\tcode: string;\n\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\tlang: string;\n\t\t\t\t\t\t\tvalue: str+
ing;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tinnererror: {\n\t\t\t\t\t\t\terrordetails: {\n\t\t\t\t\t\t\t\tmessage: string;\n\t\t\t\t\t\t\t\tcode: string;\n\t\t\t\t\t\t\t\tseverity: \"Error\" | \"Warning\" | \"Information\";\n\t\t\t\t\t\t\t}[];\n\t\t\t\t\t\t};\n\t\+
t\t\t\t};\n\t\t\t\t};\n\t\t\t\tMessageBox.error(json.error.message.value);\n\t\t\t}\n\t\t});\n\t}\n\tgetActions(): MetadataAction[] {\n\t\treturn [];\n\t}\n\n\tgetComplexTypes(): MetadataComplexType[] {\n\t\tconst complexTypes: MetadataComplexType[] = []+
;\n\n\t\tconst complexTypeNodes = Array.from(\n\t\t\tthis.metadataXml?.getElementsByTagName(\"ComplexType\") || []\n\t\t);\n\n\t\tfor (const complexTypeNode of complexTypeNodes) {\n\t\t\tconst name = complexTypeNode.getAttribute(\"Name\");\n\t\t\tif (!na+
me) continue;\n\n\t\t\tconst properties = Array.from(\n\t\t\t\tcomplexTypeNode.getElementsByTagName(\"Property\")\n\t\t\t).map((propertyNode) => ({\n\t\t\t\tname: propertyNode.getAttribute(\"Name\") || \"\",\n\t\t\t\ttype: propertyNode.getAttribute(\"Typ+
e\") || \"\",\n\t\t\t\tnullable: propertyNode.getAttribute(\"Nullable\") || \"\",\n\t\t\t\tmaxLength: ODataHelper.getMaxLength(\n\t\t\t\t\tpropertyNode.getAttribute(\"MaxLength\") || \"\"\n\t\t\t\t),\n\t\t\t}));\n\n\t\t\tcomplexTypes.push({\n\t\t\t\tname+
: name,\n\t\t\t\tproperties: properties,\n\t\t\t});\n\t\t}\n\t\treturn complexTypes.filter((entity) => !entity.name.startsWith(\"SAP__\"));\n\t}\n\n\tdestroy(): void {}\n\n\tasync createEntity(\n\t\toptions: {\n\t\t\tentityName: string;\n\t\t\tproperties+
: Record<string, unknown>;\n\t\t\theaders: Record<string, string>;\n\t\t}\n\t): Promise<void> {\n\t\tthis.model.setHeaders(options.headers);\n\t\tawait new Promise<void>((resolve, reject) => {\n\t\t\tthis.model.create(`/${options.entityName}`, options.pr+
operties, {\n\t\t\t\tsuccess: () => resolve(),\n\t\t\t\terror: (error: Error) => reject(error),\n\t\t\t});\n\t\t});\n\n\t\tawait SoundManager.FireSuccess();\n\t}\n\tasync getEntity(\n\t\toptions: {\n\t\t\tentityName: string;\n\t\t\tkeys: Record<string, s+
tring | number | boolean>;\n\t\t\theaders: Record<string, string>;\n\t\t\texpand?: string[];\n\t\t}\n\t): Promise<object> {\n\t\tthis.model.setHeaders(options.headers);\n\t\t\n\t\tconst keyPath = Object.entries(options.keys)\n\t\t\t.map(([key, value]) =>+
 `${key}='${value}'`)\n\t\t\t.join(\",\");\n\t\t\t\n\t\tconst urlParameters: Record<string, string> = {};\n\t\tif (options.expand && options.expand.length > 0) {\n\t\t\turlParameters.$expand = options.expand.join(',');\n\t\t}\n\t\t\n\t\tconst result = aw+
ait new Promise((resolve, reject) => {\n\t\t\tthis.model.read(`/${options.entityName}(${keyPath})`, {\n\t\t\t\tsuccess: (data: object) => {\n\t\t\t\t\tresolve(data);\n\t\t\t\t},\n\t\t\t\terror: (error: Error) => {\n\t\t\t\t\treject(error);\n\t\t\t\t},\n\+
t\t\t\turlParameters: Object.keys(urlParameters).length > 0 ? urlParameters : undefined,\n\t\t\t});\n\t\t});\n\n\t\tawait SoundManager.FireSuccess();\n\n\t\treturn result as object;\n\t}\n\n\tasync deleteEntity(\n\t\toptions: {\n\t\t\tentityName: string;+
\n\t\t\tkeys: Record<string, string | number | boolean>;\n\t\t\theaders: Record<string, string>;\n\t\t}\n\t): Promise<void> {\n\t\tthis.model.setHeaders(options.headers);\n\t\tconst path = this.model.createKey(`/${options.entityName}`, options.keys);\n\t+
\tawait new Promise<void>((resolve, reject) => {\n\t\t\tthis.model.remove(path, {\n\t\t\t\tsuccess: () => resolve(),\n\t\t\t\terror: (error: Error) => reject(error),\n\t\t\t});\n\t\t});\n\n\t\tawait SoundManager.FireSuccess();\n\t}\n\n\tasync initAsync()+
 {\n\t\ttry {\n\t\t\tawait this.model.metadataLoaded(true);\n\t\t} catch (error) {\n\t\t\tMessageBox.error(\"Failed to load metadata of Service \" + this.serviceUrl + \":\\n\\nPlease check Backend configuration and try again.\", {\n\t\t\t\tdetails: Util.+
getErrorMessage(error)\n\t\t\t});\n\t\t\tthrow error;\n\t\t}\n\t\tthis.metadataText = await ODataHelper.getMetadataText(this.serviceUrl);\n\t\tthis.metadataXml = ODataHelper.parseMetadataXml(this.metadataText);\n\t}\n\n\tgetEntities(): MetadataEntity[] {+
\n\t\tconst entities: MetadataEntity[] = [];\n\n\t\tconst entitySets = Array.from(\n\t\t\tthis.metadataXml?.getElementsByTagName(\"EntitySet\") || []\n\t\t).map((node) => ({\n\t\t\tName: node.getAttribute(\"Name\"),\n\t\t\tEntityType: node.getAttribute(\+
"EntityType\"),\n\t\t}));\n\n\t\tfor (const entity of entitySets) {\n\t\t\tlet entityType = entity.EntityType;\n\t\t\tif (entityType && entityType.includes(\".\")) {\n\t\t\t\tentityType = entityType.split(\".\").pop();\n\t\t\t}\n\t\t\tconst entityTypeNod+
e = Array.from(\n\t\t\t\tthis.metadataXml?.getElementsByTagName(\"EntityType\") || []\n\t\t\t).find((node) => {\n\t\t\t\treturn node.getAttribute(\"Name\") === entityType;\n\t\t\t});\n\t\t\tif (!entityTypeNode) continue;\n\n\t\t\tconst properties = Array+
.from(\n\t\t\t\tentityTypeNode.getElementsByTagName(\"Property\")\n\t\t\t).map((propertyNode) => ({\n\t\t\t\tname: propertyNode.getAttribute(\"Name\") || \"\",\n\t\t\t\ttype: propertyNode.getAttribute(\"Type\") || \"\",\n\t\t\t\tnullable: propertyNode.ge+
tAttribute(\"Nullable\") || \"\",\n\t\t\t\tmaxLength: ODataHelper.getMaxLength(\n\t\t\t\t\tpropertyNode.getAttribute(\"MaxLength\") || \"\"\n\t\t\t\t),\n\t\t\t}));\n\t\t\tconst keyNode = entityTypeNode.getElementsByTagName(\"Key\")[0];\n\n\t\t\tconst pro+
pertyRefs = keyNode ? Array.from(\n\t\t\t\tkeyNode.getElementsByTagName(\"PropertyRef\")\n\t\t\t).map((keyNode) => {\n\t\t\t\tconst keyName = keyNode.getAttribute(\"Name\") || \"\";\n\t\t\t\tconst prop = properties.find((property) => property.name === ke+
yName) || {name: keyName, type: '', nullable: '', maxLength: 0};\n\t\t\t\treturn {\n\t\t\t\t\tname: prop.name,\n\t\t\t\t\ttype: prop.type,\n\t\t\t\t\tnullable: prop.nullable,\n\t\t\t\t\tmaxLength: prop.maxLength,\n\t\t\t\t};\n\t\t\t}) : [];\n\n\t\t\t// P+
arse NavigationProperties\n\t\t\tconst navigationProperties = Array.from(\n\t\t\t\tentityTypeNode.getElementsByTagName(\"NavigationProperty\")\n\t\t\t).map((navNode) => ({\n\t\t\t\tname: navNode.getAttribute(\"Name\") || \"\",\n\t\t\t\trelationship: navN+
ode.getAttribute(\"Relationship\") || \"\",\n\t\t\t\tfromRole: navNode.getAttribute(\"FromRole\") || \"\",\n\t\t\t\ttoRole: navNode.getAttribute(\"ToRole\") || \"\"\n\t\t\t}));\n\n\t\t\tentities.push({\n\t\t\t\tname: entity.Name || \"\",\n\t\t\t\tentityT+
ype: entityType || \"\",\n\t\t\t\tproperties: properties,\n\t\t\t\tkeys: propertyRefs,\n\t\t\t\tnavigationProperties: navigationProperties\n\t\t\t});\n\t\t}\n\t\treturn entities.filter((entity) => !entity.name.startsWith(\"SAP__\"));\n\t}\n\n\tgetAssocia+
tions(): MetadataAssociation[] {\n\t\tconst associations: MetadataAssociation[] = [];\n\t\tconst associationNodes = Array.from(this.metadataXml?.getElementsByTagName(\"Association\") || []);\n\n\t\tfor (const assocNode of associationNodes) {\n\t\t\tconst+
 name = assocNode.getAttribute(\"Name\") || \"\";\n\n\t\t\t// Ends\n\t\t\tconst endNodes = Array.from(assocNode.getElementsByTagName(\"End\"));\n\t\t\tconst end = endNodes.map(endNode => ({\n\t\t\t\ttype: endNode.getAttribute(\"Type\") || \"\",\n\t\t\t\t+
multiplicity: endNode.getAttribute(\"Multiplicity\") || \"\",\n\t\t\t\trole: endNode.getAttribute(\"Role\") || \"\",\n\t\t\t\tonDeleteAction: (() => {\n\t\t\t\t\tconst onDelete = endNode.getElementsByTagName(\"OnDelete\")[0];\n\t\t\t\t\treturn onDelete ?+
 onDelete.getAttribute(\"Action\") || undefined : undefined;\n\t\t\t\t})()\n\t\t\t}));\n\n\t\t\t// ReferentialConstraint\n\t\t\tconst refConstraintNode = assocNode.getElementsByTagName(\"ReferentialConstraint\")[0];\n\t\t\tlet referentialConstraint = und+
efined;\n\t\t\tif (refConstraintNode) {\n\t\t\t\tconst principalNode = refConstraintNode.getElementsByTagName(\"Principal\")[0];\n\t\t\t\tconst dependentNode = refConstraintNode.getElementsByTagName(\"Dependent\")[0];\n\n\t\t\t\treferentialConstraint = {+
\n\t\t\t\t\tprincipal: principalNode ? [{\n\t\t\t\t\t\trole: principalNode.getAttribute(\"Role\") || \"\",\n\t\t\t\t\t\tpropertyRef: Array.from(principalNode.getElementsByTagName(\"PropertyRef\")).map(pr => ({\n\t\t\t\t\t\t\tname: pr.getAttribute(\"Name\+
") || \"\"\n\t\t\t\t\t\t}))\n\t\t\t\t\t}] : [],\n\t\t\t\t\tdependent: {\n\t\t\t\t\t\trole: dependentNode?.getAttribute(\"Role\") || \"\",\n\t\t\t\t\t\tpropertyRef: dependentNode\n\t\t\t\t\t\t\t? Array.from(dependentNode.getElementsByTagName(\"PropertyRef+
\")).map(pr => ({\n\t\t\t\t\t\t\t\tname: pr.getAttribute(\"Name\") || \"\"\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t: []\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tassociations.push({\n\t\t\t\tname,\n\t\t\t\tend,\n\t\t\t\treferentialConstraint\n\t\t\t});\n\t\t}\n+
\t\treturn associations;\n\t}\n\n\tgetMetadataText(): string {\n\t\treturn this.metadataText || \"\";\n\t}\n\tgetMetadataXml(): XMLDocument {\n\t\treturn this.metadataXml || new XMLDocument();\n\t}\n\tgetFunctions(): MetadataFunction[] {\n\t\tconst funct+
ionImports = Array.from(\n\t\t\tthis.metadataXml?.getElementsByTagName(\"FunctionImport\") || []\n\t\t).map((node) => ({\n\t\t\tName: node.getAttribute(\"Name\"),\n\t\t\tReturnType: node.getAttribute(\"ReturnType\"),\n\t\t\tEntitySet: node.getAttribute(\+
"EntitySet\"),\n\t\t\tHttpMethod: node.getAttribute(\"m:HttpMethod\"),\n\t\t\tParameters: Array.from(node.getElementsByTagName(\"Parameter\")).map(\n\t\t\t\t(paramNode) => ({\n\t\t\t\t\tname: paramNode.getAttribute(\"Name\"),\n\t\t\t\t\ttype: paramNode.g+
etAttribute(\"Type\"),\n\t\t\t\t\tnullable: paramNode.getAttribute(\"Nullable\"),\n\t\t\t\t\tmaxLength: ODataHelper.getMaxLength(\n\t\t\t\t\t\tparamNode.getAttribute(\"MaxLength\") || \"\"\n\t\t\t\t\t),\n\t\t\t\t})\n\t\t\t),\n\t\t}));\n\n\t\treturn funct+
ionImports.map((func) => ({\n\t\t\tname: func.Name,\n\t\t\treturnType: func.ReturnType,\n\t\t\tentitySet: func.EntitySet,\n\t\t\tparameters: func.Parameters,\n\t\t\tmethod: func.HttpMethod as MetadataFunctionMethod,\n\t\t}));\n\t}\n\n\tgetModel(): ODataM+
odel {\n\t\treturn this.model as unknown as ODataModel;\n\t}\n\n\tasync readEntity(options: {\n\t\tentityName: string;\n\t\tfilters: Filter[];\n\t\tsorting: Sorter[];\n\t\theaders: Record<string, string>;\n\t\ttop: number;\n\t\tskip: number;\n\t\texpand?+
: string[];\n\t}) {\n\t\tthis.model.setHeaders(options.headers);\n\t\t\n\t\tconst urlParameters: Record<string, string> = {\n\t\t\t$top: options.top.toString(),\n\t\t\t$skip: options.skip.toString(),\n\t\t};\n\t\t\n\t\tif (options.expand && options.expan+
d.length > 0) {\n\t\t\turlParameters.$expand = options.expand.join(',');\n\t\t}\n\t\t\n\t\tconst result = await new Promise((resolve, reject) => {\n\t\t\tthis.model.read(`/${options.entityName}`, {\n\t\t\t\tsuccess: (data: object) => {\n\t\t\t\t\tresolve+
(data);\n\t\t\t\t},\n\t\t\t\terror: (error: Error) => {\n\t\t\t\t\treject(error);\n\t\t\t\t},\n\t\t\t\tfilters: options.filters.length > 0 ? options.filters : undefined,\n\t\t\t\tsorters: options.sorting.length > 0 ? options.sorting : undefined,\n\t\t\t\+
turlParameters: urlParameters,\n\t\t\t});\n\t\t});\n\n\t\tawait SoundManager.FireSuccess();\n\n\t\treturn result as object;\n\t}\n\n\tasync executeFunction(options: {\n\t\tfunctionName: string;\n\t\tparameters: Record<string, string | number | boolean>;\+
n\t\tmethod: \"GET\" | \"POST\";\n\t}): Promise<unknown> {\n\t\tconst result = await new Promise((resolve, reject) => {\n\t\t\tthis.model.callFunction(`/${options.functionName}`, {\n\t\t\t\turlParameters: options.parameters,\n\t\t\t\tmethod: options.meth+
od,\n\t\t\t\tsuccess: (data: object) => resolve(data),\n\t\t\t\terror: (error: Error) => reject(error),\n\t\t\t});\n\t\t});\n\n\t\tawait SoundManager.FireSuccess();\n\n\t\treturn result as object;\n\t}\n\n\texecuteAction(options: {\n\t\tactionName: strin+
g;\n\t\tparameters: Record<string, string | number | boolean>;\n\t}): Promise<unknown> {\n\t\tthrow new Error(\"Not implemented: \" + JSON.stringify(options));\n\t}\n}\n"],"mappings":"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","ignoreList":[]}                                                                                                                                                                                               