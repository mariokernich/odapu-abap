{"version":3,"file":"OData2Client.js","names":["ODataHelper","_interopRequireDefault","__ODataHelper","Util","__Util","OData2Client","constructor","serviceUrl","this","model","ODataModelV2","attachRequestFailed","event","parameters","getParameters","resp+
onseText","response","startsWith","parser","DOMParser","xmlDoc","parseFromString","messageNode","getElementsByTagName","MessageBox","error","textContent","json","JSON","parse","message","value","getActions","destroy","createEntity","entityName","properti+
es","Promise","resolve","reject","create","success","getEntity","keys","path","createKey","context","createBindingContext","undefined","data","Error","getObject","deleteEntity","remove","initAsync","metadataLoaded","details","getErrorMessage","metadataTe+
xt","getMetadataText","metadataXml","parseMetadataXml","getEntities","entities","entitySets","Array","from","map","node","Name","getAttribute","EntityType","entity","entityType","includes","split","pop","entityTypeNode","find","propertyNode","name","type+
","nullable","maxLength","getMaxLength","keyNode","propertyRefs","property","push","filter","getMetadataXml","getFunctions","functionImports","ReturnType","EntitySet","HttpMethod","Parameters","paramNode","func","returnType","entitySet","method","getMode+
l","readEntity","options","setHeaders","headers","read","filters","length","sorters","sorting","urlParameters","$top","top","toString","$skip","skip","executeFunction","callFunction","functionName","executeAction"],"sources":["OData2Client.ts"],"sourcesC+
ontent":["import Filter from \"sap/ui/model/Filter\";\nimport IODataClient, { ODataAction } from \"./IODataClient\";\nimport ODataModel from \"sap/ui/model/odata/ODataModel\";\nimport ODataModelV2 from \"sap/ui/model/odata/v2/ODataModel\";\nimport {\n\tM+
etadataAction,\n\tMetadataEntity,\n\tMetadataFunction,\n\tMetadataFunctionMethod,\n} from \"../Types\";\nimport ODataHelper from \"./ODataHelper\";\nimport Context from \"sap/ui/model/odata/v2/Context\";\nimport { Model$RequestFailedEvent } from \"sap/ui+
/model/Model\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport Util from \"./Util\";\n\n/**\n * @namespace de.kernich.odpu.util\n */\nexport default class OData2Client implements IODataClient {\n\tpriva+
te model: ODataModelV2;\n\tprivate serviceUrl: string;\n\tprivate metadataText: string;\n\tprivate metadataXml: XMLDocument;\n\n\tconstructor(serviceUrl: string) {\n\t\tthis.serviceUrl = serviceUrl;\n\t\tthis.model = new ODataModelV2(serviceUrl, {});\n\n+
\t\tthis.model.attachRequestFailed({}, (event: Model$RequestFailedEvent) => {\n\t\t\tconst parameters = event.getParameters() as {\n\t\t\t\tresponse: {\n\t\t\t\t\tresponseText: string;\n\t\t\t\t};\n\t\t\t};\n\t\t\tconst responseText = parameters.response+
.responseText;\n\n\t\t\tif (responseText.startsWith(\"<?xml\")) {\n\t\t\t\t// Handle XML response\n\t\t\t\tconst parser = new DOMParser();\n\t\t\t\tconst xmlDoc = parser.parseFromString(responseText, \"text/xml\");\n\t\t\t\tconst messageNode = xmlDoc.get+
ElementsByTagName(\"message\")[0];\n\t\t\t\tif (messageNode) {\n\t\t\t\t\tMessageBox.error(messageNode.textContent);\n\t\t\t\t} else {\n\t\t\t\t\tMessageBox.error(\"Unknown error occurred\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Handle JSON response\n\+
t\t\t\tconst json = JSON.parse(responseText) as {\n\t\t\t\t\terror: {\n\t\t\t\t\t\tcode: string;\n\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\tlang: string;\n\t\t\t\t\t\t\tvalue: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tinnererror: {\n\t\t\t\t\t\t\terrordetails: {\+
n\t\t\t\t\t\t\t\tmessage: string;\n\t\t\t\t\t\t\t\tcode: string;\n\t\t\t\t\t\t\t\tseverity: \"Error\" | \"Warning\" | \"Information\";\n\t\t\t\t\t\t\t}[];\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\tMessageBox.error(json.error.message.value);\n\t\+
t\t}\n\t\t});\n\t}\n\tgetActions(): MetadataAction[] {\n\t\treturn [];\n\t}\n\n\tdestroy(): void {}\n\n\tasync createEntity(\n\t\tentityName: string,\n\t\tproperties: Record<string, string | number | boolean>\n\t): Promise<void> {\n\t\tawait new Promise<+
void>((resolve, reject) => {\n\t\t\tthis.model.create(`/${entityName}`, properties, {\n\t\t\t\tsuccess: () => resolve(),\n\t\t\t\terror: (error: Error) => reject(error),\n\t\t\t});\n\t\t});\n\t}\n\tasync getEntity(\n\t\tentityName: string,\n\t\tkeys: Rec+
ord<string, string | number | boolean>\n\t): Promise<object> {\n\t\tconst path = this.model.createKey(`/${entityName}`, keys);\n\t\tconst context = await new Promise<Context>((resolve, reject) => {\n\t\t\tthis.model.createBindingContext(\n\t\t\t\tpath,\n+
\t\t\t\tundefined,\n\t\t\t\t{},\n\t\t\t\t(data: Context) => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new Error(\"Failed to create binding context\"));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t);\n\+
t\t});\n\t\treturn context.getObject();\n\t}\n\n\tasync deleteEntity(\n\t\tentityName: string,\n\t\tkeys: Record<string, string | number | boolean>\n\t): Promise<void> {\n\t\tconst path = this.model.createKey(`/${entityName}`, keys);\n\t\tawait new Promi+
se<void>((resolve, reject) => {\n\t\t\tthis.model.remove(path, {\n\t\t\t\tsuccess: () => resolve(),\n\t\t\t\terror: (error: Error) => reject(error),\n\t\t\t});\n\t\t});\n\t}\n\n\tasync initAsync() {\n\t\ttry {\n\t\t\tawait this.model.metadataLoaded(true)+
;\n\t\t} catch (error) {\n\t\t\tMessageBox.error(\"Failed to load metadata of Service \" + this.serviceUrl + \":\\n\\nPlease check Backend configuration and try again.\", {\n\t\t\t\tdetails: Util.getErrorMessage(error)\n\t\t\t});\n\t\t\tthrow error;\n\t\+
t}\n\t\tthis.metadataText = await ODataHelper.getMetadataText(this.serviceUrl);\n\t\tthis.metadataXml = ODataHelper.parseMetadataXml(this.metadataText);\n\t}\n\n\tgetEntities(): MetadataEntity[] {\n\t\tconst entities: MetadataEntity[] = [];\n\n\t\tconst +
entitySets = Array.from(\n\t\t\tthis.metadataXml.getElementsByTagName(\"EntitySet\")\n\t\t).map((node) => ({\n\t\t\tName: node.getAttribute(\"Name\"),\n\t\t\tEntityType: node.getAttribute(\"EntityType\"),\n\t\t}));\n\n\t\tfor (const entity of entitySets)+
 {\n\t\t\tlet entityType = entity.EntityType;\n\t\t\tif (entityType.includes(\".\")) {\n\t\t\t\tentityType = entityType.split(\".\").pop();\n\t\t\t}\n\t\t\tconst entityTypeNode = Array.from(\n\t\t\t\tthis.metadataXml.getElementsByTagName(\"EntityType\")\+
n\t\t\t).find((node) => {\n\t\t\t\treturn node.getAttribute(\"Name\") === entityType;\n\t\t\t});\n\t\t\tconst properties = Array.from(\n\t\t\t\tentityTypeNode.getElementsByTagName(\"Property\")\n\t\t\t).map((propertyNode) => ({\n\t\t\t\tname: propertyNod+
e.getAttribute(\"Name\"),\n\t\t\t\ttype: propertyNode.getAttribute(\"Type\"),\n\t\t\t\tnullable: propertyNode.getAttribute(\"Nullable\"),\n\t\t\t\tmaxLength: ODataHelper.getMaxLength(\n\t\t\t\t\tpropertyNode.getAttribute(\"MaxLength\")\n\t\t\t\t),\n\t\t\+
t}));\n\t\t\tconst keyNode = entityTypeNode.getElementsByTagName(\"Key\")[0];\n\n\t\t\tconst propertyRefs = Array.from(\n\t\t\t\tkeyNode.getElementsByTagName(\"PropertyRef\")\n\t\t\t).map((keyNode) => ({\n\t\t\t\tname: keyNode.getAttribute(\"Name\"),\n\t+
\t\t\ttype: properties.find(\n\t\t\t\t\t(property) => property.name === keyNode.getAttribute(\"Name\")\n\t\t\t\t).type,\n\t\t\t\tnullable: properties.find(\n\t\t\t\t\t(property) => property.name === keyNode.getAttribute(\"Name\")\n\t\t\t\t).nullable,\n\t+
\t\t\tmaxLength: properties.find(\n\t\t\t\t\t(property) => property.name === keyNode.getAttribute(\"Name\")\n\t\t\t\t).maxLength,\n\t\t\t}));\n\n\t\t\tentities.push({\n\t\t\t\tname: entity.Name,\n\t\t\t\tentityType: entityType,\n\t\t\t\tproperties: prope+
rties,\n\t\t\t\tkeys: propertyRefs,\n\t\t\t});\n\t\t}\n\t\treturn entities.filter((entity) => !entity.name.startsWith(\"SAP__\"));\n\t}\n\tgetMetadataText(): string {\n\t\treturn this.metadataText;\n\t}\n\tgetMetadataXml(): XMLDocument {\n\t\treturn this+
.metadataXml;\n\t}\n\tgetFunctions(): MetadataFunction[] {\n\t\tconst functionImports = Array.from(\n\t\t\tthis.metadataXml.getElementsByTagName(\"FunctionImport\")\n\t\t).map((node) => ({\n\t\t\tName: node.getAttribute(\"Name\"),\n\t\t\tReturnType: node+
.getAttribute(\"ReturnType\"),\n\t\t\tEntitySet: node.getAttribute(\"EntitySet\"),\n\t\t\tHttpMethod: node.getAttribute(\"m:HttpMethod\"),\n\t\t\tParameters: Array.from(node.getElementsByTagName(\"Parameter\")).map(\n\t\t\t\t(paramNode) => ({\n\t\t\t\t\t+
name: paramNode.getAttribute(\"Name\"),\n\t\t\t\t\ttype: paramNode.getAttribute(\"Type\"),\n\t\t\t\t\tnullable: paramNode.getAttribute(\"Nullable\"),\n\t\t\t\t\tmaxLength: ODataHelper.getMaxLength(\n\t\t\t\t\t\tparamNode.getAttribute(\"MaxLength\")\n\t\t+
\t\t\t),\n\t\t\t\t})\n\t\t\t),\n\t\t}));\n\n\t\treturn functionImports.map((func) => ({\n\t\t\tname: func.Name,\n\t\t\treturnType: func.ReturnType,\n\t\t\tentitySet: func.EntitySet,\n\t\t\tparameters: func.Parameters,\n\t\t\tmethod: func.HttpMethod as Me+
tadataFunctionMethod,\n\t\t}));\n\t}\n\n\tgetModel(): ODataModel {\n\t\treturn this.model as unknown as ODataModel;\n\t}\n\n\tasync readEntity(options: {\n\t\tentityName: string;\n\t\tfilters: Filter[];\n\t\tsorting: Sorter[];\n\t\theaders: Record<string+
, string>;\n\t\ttop: number;\n\t\tskip: number;\n\t}) {\n\t\tthis.model.setHeaders(options.headers);\n\t\treturn await new Promise((resolve, reject) => {\n\t\t\tthis.model.read(`/${options.entityName}`, {\n\t\t\t\tsuccess: (data: object) => {\n\t\t\t\t\t+
resolve(data);\n\t\t\t\t},\n\t\t\t\terror: (error: Error) => {\n\t\t\t\t\treject(error);\n\t\t\t\t},\n\t\t\t\tfilters: options.filters.length > 0 ? options.filters : undefined,\n\t\t\t\tsorters: options.sorting.length > 0 ? options.sorting : undefined,\n+
\t\t\t\turlParameters: {\n\t\t\t\t\t$top: options.top.toString(),\n\t\t\t\t\t$skip: options.skip.toString(),\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\tasync executeFunction(options: {\n\t\tfunctionName: string;\n\t\tparameters: Record<string, string | nu+
mber | boolean>;\n\t\tmethod: \"GET\" | \"POST\";\n\t}): Promise<unknown> {\n\t\treturn await new Promise((resolve, reject) => {\n\t\t\tthis.model.callFunction(`/${options.functionName}`, {\n\t\t\t\turlParameters: options.parameters,\n\t\t\t\tmethod: opt+
ions.method,\n\t\t\t\tsuccess: (data: object) => resolve(data),\n\t\t\t\terror: (error: Error) => reject(error),\n\t\t\t});\n\t\t});\n\t}\n\n\texecuteAction(options: {\n\t\tactionName: string;\n\t\tparameters: Record<string, string | number | boolean>;\n+
\t\tmethod: \"GET\" | \"POST\";\n\t}): Promise<unknown> {\n\t\tthrow new Error(\"Not implemented\");\n\t}\n}\n"],"mappings":"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","ignoreList":[]}                                                                               