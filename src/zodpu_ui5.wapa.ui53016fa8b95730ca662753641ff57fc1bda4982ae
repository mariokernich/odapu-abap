{"version":3,"file":"Component-dbg.js","names":["DialogManager","_interopRequireDefault","__DialogManager","ODataRequests","__ODataRequests","Component","UIComponent","extend","metadata","manifest","init","_init","UIComponent.prototype.init.call","setMod+
el","JSONModel","Device","dialogManager","model","getModel","requests","attachRequestFailed","event","parameters","getParameters","responseText","response","startsWith","parser","DOMParser","xmlDoc","parseFromString","messageNode","getElementsByTagName",+
"MessageBox","error","textContent","json","JSON","parse","message","value","getRouter","initialize","getContentDensityClass","_getContentDensityClass","contentDensityClass","undefined","document","body","classList","contains","support","touch"],"sources"+
:["Component.ts"],"sourcesContent":["import UIComponent from \"sap/ui/core/UIComponent\";\nimport DialogManager from \"./util/DialogManager\";\nimport ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport ODataRequests from \"./util/ODataRequests+
\";\nimport Device from \"sap/ui/Device\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport { Model$RequestFailedEvent } from \"sap/ui/model/Model\";\nimport MessageBox from \"sap/m/MessageBox\";\n\n/**\n * @namespace de.kernich.odpu\n */\+
nexport default class Component extends UIComponent {\n\tpublic static metadata = {\n\t\tmanifest: \"json\",\n\t};\n\n\tprivate contentDensityClass: string;\n\n\tpublic dialogManager: DialogManager;\n\tpublic model: ODataModel;\n\tpublic requests: ODataR+
equests;\n\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\tthis.setModel(new JSONModel(Device), \"device\");\n\n\t\tthis.dialogManager = new DialogManager(this);\n\t\tthis.model = this.getModel() as ODataModel;\n\t\tthis.requests = new ODataRequests(t+
his.model);\n\n\t\tthis.model.attachRequestFailed({}, (event: Model$RequestFailedEvent) => {\n\t\t\tconst parameters = event.getParameters() as {\n\t\t\t\tresponse: {\n\t\t\t\t\tresponseText: string;\n\t\t\t\t};\n\t\t\t};\n\t\t\tconst responseText = para+
meters.response.responseText;\n\n\t\t\tif (responseText.startsWith(\"<?xml\")) {\n\t\t\t\t// Handle XML response\n\t\t\t\tconst parser = new DOMParser();\n\t\t\t\tconst xmlDoc = parser.parseFromString(responseText, \"text/xml\");\n\t\t\t\tconst messageNo+
de = xmlDoc.getElementsByTagName(\"message\")[0];\n\t\t\t\tif (messageNode) {\n\t\t\t\t\tMessageBox.error(messageNode.textContent);\n\t\t\t\t} else {\n\t\t\t\t\tMessageBox.error(\"Unknown error occurred\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Handle J+
SON response\n\t\t\t\tconst json = JSON.parse(responseText) as {\n\t\t\t\t\terror: {\n\t\t\t\t\t\tcode: string;\n\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\tlang: string;\n\t\t\t\t\t\t\tvalue: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tinnererror: {\n\t\t\t\t\t\t\te+
rrordetails: {\n\t\t\t\t\t\t\t\tmessage: string;\n\t\t\t\t\t\t\t\tcode: string;\n\t\t\t\t\t\t\t\tseverity: \"Error\" | \"Warning\" | \"Information\";\n\t\t\t\t\t\t\t}[];\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\tMessageBox.error(json.error.messa+
ge.value);\n\t\t\t}\n\t\t});\n\n\t\tthis.getRouter().initialize();\n\t}\n\n\t/**\n\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t * design mode class should be set, which influences the size appearance of som+
e controls.\n\t * @public\n\t * @returns css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t */\n\tpublic getContentDensityClass(): string {\n\t\tif (this.contentDensityClass === undefined) {\n\t+
\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\tif (\n\t\t\t\tdocument.body.classList.contains(\"sapUiSizeCozy\") ||\n\t\t\t\tdocument.body.classList.contains(\"sapUiSizeCompact\")\n\t\t\t) {\n\t\t\t\tth+
is.contentDensityClass = \"\";\n\t\t\t} else if (!Device.support.touch) {\n\t\t\t\t// apply \"compact\" mode if touch is not supported\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCompact\";\n\t\t\t} else {\n\t\t\t\t// \"cozy\" in case of touch support+
; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCozy\";\n\t\t\t}\n\t\t}\n\t\treturn this.contentDensityClass;\n\t}\n}\n"],"mappings":";;;;;;QACOA,aAAa,GAAAC,s+
BAAA,CAAAC,eAAA;EAAA,MAEbC,aAAa,GAAAF,sBAAA,CAAAG,eAAA;EAMpB;AACA;AACA;EAFA,MAGqBC,SAAS,GAASC,WAAW,CAAAC,MAAA;IACnCC,QAAQ,EAAG;MACxBC,QAAQ,EAAE;IACX,CAAC;IAQMC,IAAI,WAAAC,MAAA,EAAS;MACnBC,+BAAA;MAEA,IAAI,CAACC,QAAQ,CAAC,IAAIC,SAAS,CAACC,MAAM,CAAC,EAAE,QA+
AQ,CAAC;MAE9C,IAAI,CAACC,aAAa,GAAG,IAAIhB,aAAa,CAAC,IAAI,CAAC;MAC5C,IAAI,CAACiB,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAe;MAC1C,IAAI,CAACC,QAAQ,GAAG,IAAIhB,aAAa,CAAC,IAAI,CAACc,KAAK,CAAC;MAE7C,IAAI,CAACA,KAAK,CAACG,mBAAmB,CAAC,CAAC,CAAC,EAAGC,KAA+B,IAAK;QACvE,+
MAAMC,UAAU,GAAGD,KAAK,CAACE,aAAa,CAAC,CAItC;QACD,MAAMC,YAAY,GAAGF,UAAU,CAACG,QAAQ,CAACD,YAAY;QAErD,IAAIA,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC,EAAE;UACrC;UACA,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;UAC9B,MAAMC,MAAM,GAAGF,MAAM,CAACG,eAAe,CAACN,YAAY,EAAE,UAAU,CAAC;+
UAC/D,MAAMO,WAAW,GAAGF,MAAM,CAACG,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;UAC7D,IAAID,WAAW,EAAE;YAChBE,UAAU,CAACC,KAAK,CAACH,WAAW,CAACI,WAAW,CAAC;UAC1C,CAAC,MAAM;YACNF,UAAU,CAACC,KAAK,CAAC,wBAAwB,CAAC;UAC3C;QACD,CAAC,MAAM;UACN;UACA,MAAME,IAAI,GAAGC,IAAI,CAA+
CC,KAAK,CAACd,YAAY,CAenC;UACDS,UAAU,CAACC,KAAK,CAACE,IAAI,CAACF,KAAK,CAACK,OAAO,CAACC,KAAK,CAAC;QAC3C;MACD,CAAC,CAAC;MAEF,IAAI,CAACC,SAAS,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;IAC9B,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACQC,sBAAsB,WAAAC,wBAAA,EAAW;MACvC,IAAI,IAA+
I,CAACC,mBAAmB,KAAKC,SAAS,EAAE;QAC3C;QACA,IACCC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,eAAe,CAAC,IACjDH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,kBAAkB,CAAC,EACnD;UACD,IAAI,CAACL,mBAAmB,GAAG,EAAE;QAC9B,CAAC,MAAM,IAAI,CAAC9B,MAAM,CAACoC,OAAO,CAACC,K+
AAK,EAAE;UACjC;UACA,IAAI,CAACP,mBAAmB,GAAG,kBAAkB;QAC9C,CAAC,MAAM;UACN;UACA,IAAI,CAACA,mBAAmB,GAAG,eAAe;QAC3C;MACD;MACA,OAAO,IAAI,CAACA,mBAAmB;IAChC;EAAC;EAAA,OAtFmBxC,SAAS;AAAA","ignoreList":[]}                                                            