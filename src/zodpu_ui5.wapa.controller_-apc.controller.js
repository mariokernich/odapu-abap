sap.ui.define(["./BaseController","sap/ui/model/json/JSONModel","sap/m/MessageToast","../Constants","sap/ui/Device","sap/ui/core/Core","sap/ui/core/ws/SapPcpWebSocket","../util/Util"],function(t,e,s,o,n,i,c,a){"use strict";function r(t){return t&&t.__esM+
odule&&typeof t.default!=="undefined"?t.default:t}const h=r(t);const d=r(o);const p=r(a);const u=h.extend("de.kernich.odpu.controller.APC",{constructor:function t(){h.prototype.constructor.apply(this,arguments);this.local={folderTreeIcon:sap.ui.require.t+
oUrl("de/kernich/odpu/img/folder-tree-light.svg")};this.fragmentId="";this.apcModel={selectedApc:{path:""},state:"disconnected"};this.apcLog={entries:[]};this.apcView={githubIcon:sap.ui.require.toUrl("de/kernich/odpu/img/github-brands.svg"),linkedinIcon:+
sap.ui.require.toUrl("de/kernich/odpu/img/linkedin-brands.svg")}},onInit:function t(){h.prototype.onInit.call(this);void this.handleInit();this.getView().setModel(new e(this.apcModel,true),"apcModel");this.getView().setModel(new e(this.apcLog,true),"apcL+
og");this.getView().setModel(new e(this.apcView,true),"apcView")},handleInit:async function t(){await this.getGlobalModel().dataLoaded();this.setBusy(true);await this.initModel();this.setBusy(false);if(!n.support.websocket){s.show("Note: WebSocket not su+
pported")}},onChoosePushChannelButtonPress:function t(){void this.handleAddApc()},onDisconnectPushChannelButtonPress:function t(){this.socket?.close();this.apcModel.state="disconnected";s.show("Disconnected from "+this.apcModel.selectedApc.path);this.apc+
Model.selectedApc={path:""}},onClearPushChannelButtonPress:function t(){this.apcLog.entries=[];this.refreshApcLog()},handleAddApc:async function t(){this.setBusy(true);try{const t=await this.getApc();const e=await this.component.dialogManager.pickApc(t);+
this.apcModel.selectedApc=e;this.setTitle(e.ApplicationId)}finally{this.setBusy(false)}},initModel:async function t(){const e=this.getOwnerComponent().getModel();await e.metadataLoaded(true);e.setSizeLimit(d.SERVICE_QUERY_LIMIT)},onConnectPushChannelButt+
onPress:async function t(){this.setBusy(true);try{await new Promise((t,e)=>{this.socket=new c(this.apcModel.selectedApc.path);this.socket.attachMessage(t=>{this.apcLog.entries.push({participant:"Server",data:t.getParameters().data,timestamp:(new Date).to+
ISOString()});this.refreshApcLog()});this.socket.attachOpen(()=>{this.apcModel.state="connected";t()});this.socket.attachClose(()=>{this.apcModel.state="disconnected"});this.socket.attachError(t=>{e(new Error("failed to connect: "+JSON.stringify(t)))})})+
;this.focusFeedInput();s.show("Connected to "+this.apcModel.selectedApc.path)}catch(t){p.showError(t)}finally{this.setBusy(false)}},getApc:async function t(){const e=this.getOwnerComponent().getModel();return new Promise((t,s)=>{e.read("/apcSet",{success+
:e=>{t(e.results)},error:s,urlParameters:{$top:d.SERVICE_QUERY_LIMIT.toString()}})})},getById:function t(e){const s=this.fragmentId;const o=`${s}--${e}`;const n=i.byId(o);return n},refreshApcLog:function t(){this.getView().getModel("apcLog").refresh();th+
is.getById("idLogTable").refreshAggregation("items")},onPostMessageButtonPress:function t(e){this.apcLog.entries.push({participant:"Client",data:e.getParameters().value,timestamp:(new Date).toISOString()});this.socket?.send(e.getParameters().value);this.+
refreshApcLog();this.focusFeedInput()},focusFeedInput:function t(){this.getById("idFeedInput")?.focus()},setTitle:function t(e){throw new Error("Not implemented: "+e)}});return u});                                                                          
//# sourceMappingURL=APC.controller.js.map                                                                                                                                                                                                                     