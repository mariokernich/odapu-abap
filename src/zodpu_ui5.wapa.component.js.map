{"version":3,"file":"Component.js","names":["DialogManager","_interopRequireDefault","__DialogManager","ODataRequests","__ODataRequests","Component","UIComponent","extend","metadata","manifest","init","_init","UIComponent.prototype.init.call","this","set+
Model","JSONModel","Device","dialogManager","model","getModel","requests","attachRequestFailed","event","parameters","getParameters","responseText","response","startsWith","parser","DOMParser","xmlDoc","parseFromString","messageNode","getElementsByTagNam+
e","MessageBox","error","textContent","json","JSON","parse","message","value","setIconModel","getRouter","initialize","_setIconModel","githubIcon","sap","ui","require","toUrl","linkedinIcon","odapuIcon","getContentDensityClass","_getContentDensityClass",+
"contentDensityClass","undefined","document","body","classList","contains","support","touch"],"sources":["Component.ts"],"sourcesContent":["import UIComponent from \"sap/ui/core/UIComponent\";\nimport DialogManager from \"./util/DialogManager\";\nimport +
ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport ODataRequests from \"./util/ODataRequests\";\nimport Device from \"sap/ui/Device\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport { Model$RequestFailedEvent } from \"sap/ui/m+
odel/Model\";\nimport MessageBox from \"sap/m/MessageBox\";\n\n/**\n * @namespace de.kernich.odpu\n */\nexport default class Component extends UIComponent {\n\tpublic static metadata = {\n\t\tmanifest: \"json\",\n\t};\n\n\tprivate contentDensityClass: st+
ring;\n\n\tpublic dialogManager: DialogManager;\n\tpublic model: ODataModel;\n\tpublic requests: ODataRequests;\n\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\tthis.setModel(new JSONModel(Device), \"device\");\n\n\t\tthis.dialogManager = new DialogM+
anager(this);\n\t\tthis.model = this.getModel() as ODataModel;\n\t\tthis.requests = new ODataRequests(this.model);\n\n\t\tthis.model.attachRequestFailed({}, (event: Model$RequestFailedEvent) => {\n\t\t\tconst parameters = event.getParameters() as {\n\t\t+
\t\tresponse: {\n\t\t\t\t\tresponseText: string;\n\t\t\t\t};\n\t\t\t};\n\t\t\tconst responseText = parameters.response.responseText;\n\n\t\t\tif (responseText.startsWith(\"<?xml\")) {\n\t\t\t\t// Handle XML response\n\t\t\t\tconst parser = new DOMParser(+
);\n\t\t\t\tconst xmlDoc = parser.parseFromString(responseText, \"text/xml\");\n\t\t\t\tconst messageNode = xmlDoc.getElementsByTagName(\"message\")[0];\n\t\t\t\tif (messageNode) {\n\t\t\t\t\tMessageBox.error(messageNode.textContent);\n\t\t\t\t} else {\n+
\t\t\t\t\tMessageBox.error(\"Unknown error occurred\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Handle JSON response\n\t\t\t\tconst json = JSON.parse(responseText) as {\n\t\t\t\t\terror: {\n\t\t\t\t\t\tcode: string;\n\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t+
lang: string;\n\t\t\t\t\t\t\tvalue: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tinnererror: {\n\t\t\t\t\t\t\terrordetails: {\n\t\t\t\t\t\t\t\tmessage: string;\n\t\t\t\t\t\t\t\tcode: string;\n\t\t\t\t\t\t\t\tseverity: \"Error\" | \"Warning\" | \"Information\";\n+
\t\t\t\t\t\t\t}[];\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\tMessageBox.error(json.error.message.value);\n\t\t\t}\n\t\t});\n\n\t\tthis.setIconModel();\n\n\t\tthis.getRouter().initialize();\n\t}\n\n\tprivate setIconModel() {\n\t\tthis.setModel(ne+
w JSONModel({\n\t\t\tgithubIcon: sap.ui.require.toUrl(\"de/kernich/odpu/img/github-brands.svg\"),\n\t\t\tlinkedinIcon: sap.ui.require.toUrl(\n\t\t\t\t\"de/kernich/odpu/img/linkedin-brands.svg\"\n\t\t\t),\n\t\t\todapuIcon: sap.ui.require.toUrl(\"de/kernic+
h/odpu/img/odapu-logo.png\"),\n\t\t}), \"icons\");\n\t}\n\n\t/**\n\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t * design mode class should be set, which influences the size appearance of some controls.\n\t +
* @public\n\t * @returns css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t */\n\tpublic getContentDensityClass(): string {\n\t\tif (this.contentDensityClass === undefined) {\n\t\t\t// check whe+
ther FLP has already set the content density class; do nothing in this case\n\t\t\tif (\n\t\t\t\tdocument.body.classList.contains(\"sapUiSizeCozy\") ||\n\t\t\t\tdocument.body.classList.contains(\"sapUiSizeCompact\")\n\t\t\t) {\n\t\t\t\tthis.contentDensit+
yClass = \"\";\n\t\t\t} else if (!Device.support.touch) {\n\t\t\t\t// apply \"compact\" mode if touch is not supported\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCompact\";\n\t\t\t} else {\n\t\t\t\t// \"cozy\" in case of touch support; default for mo+
st sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCozy\";\n\t\t\t}\n\t\t}\n\t\treturn this.contentDensityClass;\n\t}\n}\n"],"mappings":"mRACOA,EAAaC,EAAAC,GAAA,MAEbC,EAAaF,EAAA+
G,GAMpB,MAGqBC,EAAkBC,EAAWC,OAAA,6BACnCC,SAAW,CACxBC,SAAU,QASJC,KAAI,SAAAC,IACVC,sBAAAC,MAEAA,KAAKC,SAAS,IAAIC,EAAUC,GAAS,UAErCH,KAAKI,cAAgB,IAAIjB,EAAca,MACvCA,KAAKK,MAAQL,KAAKM,WAClBN,KAAKO,SAAW,IAAIjB,EAAcU,KAAKK,OAEvCL,KAAKK,MAAMG,oBAAoB,CAAC,EAAIC,I+
ACnC,MAAMC,EAAaD,EAAME,gBAKzB,MAAMC,EAAeF,EAAWG,SAASD,aAEzC,GAAIA,EAAaE,WAAW,SAAU,CAErC,MAAMC,EAAS,IAAIC,UACnB,MAAMC,EAASF,EAAOG,gBAAgBN,EAAc,YACpD,MAAMO,EAAcF,EAAOG,qBAAqB,WAAW,GAC3D,GAAID,EAAa,CAChBE,EAAWC,MAAMH,EAAYI,YAC9B,KAAO,CACNF,EAAWC,MAAM,yBAClB+
,CACD,KAAO,CAEN,MAAME,EAAOC,KAAKC,MAAMd,GAgBxBS,EAAWC,MAAME,EAAKF,MAAMK,QAAQC,MACrC,IAGD5B,KAAK6B,eAEL7B,KAAK8B,YAAYC,YAClB,EAEQF,aAAY,SAAAG,IACnBhC,KAAKC,SAAS,IAAIC,EAAU,CAC3B+B,WAAYC,IAAIC,GAAGC,QAAQC,MAAM,yCACjCC,aAAcJ,IAAIC,GAAGC,QAAQC,MAC5B,2CAEDE,U+
AAWL,IAAIC,GAAGC,QAAQC,MAAM,wCAC7B,QACL,EAQOG,uBAAsB,SAAAC,IAC5B,GAAIzC,KAAK0C,sBAAwBC,UAAW,CAE3C,GACCC,SAASC,KAAKC,UAAUC,SAAS,kBACjCH,SAASC,KAAKC,UAAUC,SAAS,oBAChC,CACD/C,KAAK0C,oBAAsB,EAC5B,MAAO,IAAKvC,EAAO6C,QAAQC,MAAO,CAEjCjD,KAAK0C,oBAAsB,kBAC5B,KAA+
O,CAEN1C,KAAK0C,oBAAsB,eAC5B,CACD,CACA,OAAO1C,KAAK0C,mBACb,IAAC,OAlGmBlD,CAAS","ignoreList":[]}                                                                                                                                                                