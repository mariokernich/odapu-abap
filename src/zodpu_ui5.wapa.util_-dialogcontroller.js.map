{"version":3,"file":"DialogController.js","names":["DialogController","BaseObject","extend","constructor","prototype","apply","this","arguments","data","dialogId","dialog","_dialog","dialogManager","_dialogManager","value","requests","_requests","init","+
async","_init","options","Promise","all","initDialog","initPromise","setModel","_setModel","model","modelName","getModel","_getModel","_initDialog","id","dialogName","name","createDialogFromFragment","path","controller","bundle","dialogModel","JSONModel"+
,"setBusyIndicatorDelay","getElement","_getElement","el","Fragment","byId","Error","getText","_getText","key","_createDialogFromFragment","load","_initPromise","promiseHelper","createPromise","_createPromise","resolve","reject","promise","s","e","res","o+
nConfirm","_onConfirm","close","destroy","onCancel","_onCancel","_resolve","_reject","reason","_destroy","BaseObject.prototype.destroy.call"],"sources":["DialogController.ts"],"sourcesContent":["import Dialog from \"sap/m/Dialog\";\nimport Fragment from +
\"sap/ui/core/Fragment\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport Model from \"sap/ui/model/Model\";\nimport BaseObject from \"sap/ui/base/Object\";\nimport DialogManager from \"./DialogManager\";\nimport ODataRequests from \"./OD+
ataRequests\";\nimport Control from \"sap/ui/core/Control\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\n\ntype PromiseHelper<T> = {\n    promise: Promise<T>;\n    resolve: (value: T) => void;\n    reject: (value: unknown) => void;\n};+
\n\n/**\n * @namespace de.kernich.odpu.util\n */\nclass DialogController extends BaseObject {\n    public data = {};\n    public promiseHelper?: PromiseHelper<typeof this.data>;\n    public get dialog() {\n        return this._dialog;\n    }\n\n    publi+
c get dialogManager() {\n        return this._dialogManager;\n    }\n\n    protected set dialog(value: Dialog) {\n        this._dialog = value;\n    }\n\n    private set dialogManager(value: DialogManager) {\n        this._dialogManager = value;\n    }\n+
\n    public set requests(value: ODataRequests) {\n        this._requests = value;\n    }\n\n    public get requests() {\n        return this._requests;\n    }\n\n    private dialogName?: string;\n    private dialogId = \"\";\n    private _dialog!: Dialo+
g;\n    private _dialogManager!: DialogManager;\n    private _requests!: ODataRequests;\n    private bundle!: ResourceBundle;\n    \n    async init(options: {\n        path: string;\n        name: string;\n        id: string;\n        dialogManager: Dial+
ogManager;\n        requests: ODataRequests;\n        bundle: ResourceBundle\n    }) {\n        return Promise.all([this.initDialog(options), this.initPromise()]);\n    }\n\n    public setModel(model: Model, modelName?: string) {\n        this.dialog.set+
Model(model, modelName);\n    }\n\n    public getModel(modelName?: string) {\n        return this.dialog?.getModel(modelName);\n    }\n\n    private async initDialog(options: {\n        path: string;\n        name: string;\n        id: string;\n        d+
ialogManager: DialogManager;\n        requests: ODataRequests;\n        bundle: ResourceBundle;\n    }): Promise<Dialog> {\n        let dialog = this.dialog;\n\n        this.dialogId = options.id;\n\n        if (!dialog) {\n\n            this.dialogName +
= options.name;\n            dialog = await this.createDialogFromFragment({\n                path: options.path,\n                id: options.id,\n                controller: this\n            });\n\n            this.dialog = dialog;\n            this.di+
alogManager = options.dialogManager;\n            this.requests = options.requests;\n            this.bundle = options.bundle;\n            const dialogModel = new JSONModel(this.data, true);\n\n            this.setModel(dialogModel, \"dialog\");\n\n    +
        dialog.setBusyIndicatorDelay(0);\n        }\n\n        return dialog;\n    }\n\n    public getElement<TType extends Control>(id: string): TType {\n        const el = Fragment.byId(this.dialogId, id) as TType;\n\n        if (!el) {\n            th+
row new Error(`Element in dialog ${this.dialogId} w/ id ${id} not found`);\n        }\n\n        return el;\n    }\n\n    public getText(key: string): string {\n        return this.bundle.getText(key) ?? key;\n    }\n\n    private async createDialogFromF+
ragment(options: {\n        path: string;\n        controller: object;\n        id: string;\n    }): Promise<Dialog> {\n        return (await Fragment.load({\n            name: options.path,\n            controller: options.controller,\n            id: o+
ptions.id\n        })) as Dialog;\n    }\n\n    public async initPromise(): Promise<PromiseHelper<typeof this.data>> {\n        this.promiseHelper = await this.createPromise();\n\n        return this.promiseHelper;\n    }\n\n    private async createPromi+
se(): Promise<PromiseHelper<typeof this.data>> {\n        let resolve: (value: typeof this.data) => void;\n        let reject: (value: unknown) => void;\n\n        const promise = new Promise<typeof this.data>((s, e) => {\n            resolve = s;\n     +
       reject = e;\n        });\n\n        return new Promise((res) => {\n            res({\n                promise: promise,\n                reject: reject,\n                resolve: resolve\n            });\n        });\n    }\n\n    onConfirm() {\n +
       this.resolve();\n\n        if (this.dialog) {\n            this.dialog.close();\n            this.dialog.destroy();\n        }\n    }\n\n    onCancel() {\n        this.reject();\n\n        if (this.dialog) {\n            this.dialog.close();\n    +
        this.dialog.destroy();\n        }\n    }\n\n    resolve(data?: typeof this.data) {\n        this.promiseHelper?.resolve(data || this.data);\n    }\n\n    reject(reason?: string) {\n        this.promiseHelper?.reject(reason || \"Cancelled\");\n   +
 }\n\n    destroy() {\n        super.destroy();\n        this.dialog?.destroy();\n        this.promiseHelper?.reject(\"destroy routine\");\n    }\n}\n\nexport default DialogController;\nexport { DialogController };"],"mappings":"uHAgBA,MAGMA,EAAyBC,EAAUC+
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","ignoreList":[]}       